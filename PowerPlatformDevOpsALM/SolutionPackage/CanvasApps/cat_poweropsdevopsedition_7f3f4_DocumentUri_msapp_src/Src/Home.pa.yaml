Home As screen:
  BackgroundImage: =
  Width: =Max(App.Width, App.DesignWidth)
  Height: =Max(App.Height, App.DesignHeight)
  OnVisible: |
    =Select(fncInitializeHome);

  lblAppTitle As label:
    Text: ="Power Platform ALM - Azure DevOps Edition"
    Align: =Center
    ZIndex: =1
    FontWeight: =Semibold
    Height: =68
    Width: =1920
    Size: =20
    Fill: =PrimaryColor2Value
    Font: =Font.'Segoe UI'
    Color: =RGBA(255, 255, 255, 1)

  DialogOverlay As rectangle:
    ZIndex: =21
    Height: =1080
    Width: =1920
    Fill: =RGBA(0, 0, 0, .5)
    BorderColor: =ColorFade(DialogOverlay.Fill, -20%)
    HoverFill: =RGBA(0, 0, 0, .5)
    PressedFill: =ColorFade(DialogOverlay.Fill, -20%)
    DisabledFill: =DialogOverlay.Fill
    Visible: =showDialogOverlay

  tmrCheckBuildAndPullRequestStatuses As timer:
    Duration: =15000
    Start: =locStartCheckBuildStatusTimer
    AutoStart: =true
    Repeat: =true
    ZIndex: =29
    Visible: =false
    DisabledColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, 90%)
    PressedBorderColor: =tmrCheckBuildAndPullRequestStatuses.Fill
    PressedFill: =tmrCheckBuildAndPullRequestStatuses.Color
    HoverColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Color, 20%)
    HoverFill: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, 20%)
    DisabledFill: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, 70%)
    HoverBorderColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.BorderColor, 20%)
    DisabledBorderColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.BorderColor, 70%)
    PressedColor: =tmrCheckBuildAndPullRequestStatuses.Fill
    X: =490
    Height: =68
    BorderColor: =ColorFade(tmrCheckBuildAndPullRequestStatuses.Fill, -20%)
    OnTimerStart: |
      =UpdateContext(
          {
              locImportSolutionStatus: If(
                  locImportingSolutionBuildId > 0,
                  CustomAzureDevOps.GetBuild(
                      drpAdoOrganizations.Selected.AccountName,
                      drpAdoProjects.Selected.name,
                      locImportingSolutionBuildId
                  )
              )
          }
      );
      If(
          locImportSolutionStatus.status = "completed",
          If(
              IsBlank(
                  LookUp(
                      SelectedEnvironmentSolutions,
                      drpAdoPipelinesWithBuild.Selected.DisplayName in uniquename
                  )
              ),
              Select(fncLoadSolutions);
          );
          UpdateContext(
              {
                  locImportingSolutionBuildId: 0,
                  locImportSolutionStatus: Blank()
              }
          );
          
      );
      ForAll(
          SelectedEnvironmentSolutions As e,
          Collect(
              TempSolutionsLatestBuildStatuses,
              {
                  uniquename: e.uniquename,
                  exportToGitStatus: If(
                      !IsBlank(
                          LookUp(
                              LastSavedExportToGitPipelineRuns,
                              solutionUniqueName = e.uniquename,
                              buildId
                          )
                      ),
                      CustomAzureDevOps.GetBuild(
                          drpAdoOrganizations.Selected.AccountName,
                          drpAdoProjects.Selected.name,
                          LookUp(
                              LastSavedExportToGitPipelineRuns,
                              solutionUniqueName = e.uniquename,
                              buildId
                          )
                      )
                  ),
                  pullRequestStatus: If(
                      !IsBlank(
                          LookUp(
                              LastSavedPullRequests,
                              solutionUniqueName = e.uniquename,
                              pullRequestId
                          )
                      ),
                      CustomAzureDevOps.GetPullReqeust(
                          drpAdoOrganizations.Selected.AccountName,
                          drpAdoProjects.Selected.name,
                          drpRepos.Selected.id,
                          LookUp(
                              LastSavedPullRequests,
                              solutionUniqueName = e.uniquename,
                              pullRequestId
                          )
                      )
                  ),
                  solutionTargetBranchStatus: If(
                      !IsBlank(
                          LookUp(
                              LastSavedPullRequests,
                              solutionUniqueName = e.uniquename,
                              targetBranchName
                          )
                      ),
                      First(
                          CustomAzureDevOps.GetBuilds(
                              drpAdoOrganizations.Selected.AccountName,
                              drpAdoProjects.Selected.name,
                              {
                                  branchName: LookUp(
                                      LastSavedPullRequests,
                                      solutionUniqueName = e.uniquename,
                                      targetBranchName
                                  ),
                                  requestedFor: gblAzureDevOpsUserId,
                                  queryOrder: "queueTimeDescending",
                                  minTime: LookUp(
                                      SolutionsLatestBuildStatuses,
                                      uniquename = e.uniquename,
                                      pullRequestStatus
                                  ).closedDate//used to constrain number of results since $top was not working
                              }
                          ).value
                      )
                  ),
                  solutionReleaseBranchStatus: If(
                      !IsBlank(
                          LookUp(
                              SolutionsLatestBuildStatuses,
                              uniquename = e.uniquename,
                              solutionTargetBranchStatus
                          ).finishTime
                      ),
                      First(
                          CustomAzureDevOps.GetBuilds(
                              drpAdoOrganizations.Selected.AccountName,
                              drpAdoProjects.Selected.name,
                              {
                                  branchName: "refs/heads/releases",
                                  queryOrder: "queueTimeDescending",
                                  definitions: LookUp(
                                      SelectedProjectPipelines,
                                      e.uniquename in DisplayName
                                  ).id,
                                  minTime: LookUp(
                                      SolutionsLatestBuildStatuses,
                                      uniquename = e.uniquename,
                                      solutionTargetBranchStatus
                                  ).finishTime//used to constrain number of results since $top was not working
                              }
                          ).value
                      )
                  )
              }
          );
          
      );
      ClearCollect(
          SolutionsLatestBuildStatuses,
          TempSolutionsLatestBuildStatuses
      );
      Clear(TempSolutionsLatestBuildStatuses);
      Select(fncCollectSelectedRepoBranches);
    OnTimerEnd: =

  CommitDialog As groupContainer:
    ZIndex: =24
    DisplayMode: =DisplayMode.Edit
    Height: =1080
    Width: =550
    Y: =0
    X: =1370
    Fill: =RGBA(0, 0, 0, 0)
    BorderStyle: =BorderStyle.Solid
    BorderColor: =RGBA(0, 0, 0, 1)
    Visible: =showCommitDialog

    CommitRectangle As rectangle:
      PressedFill: =ColorFade(CommitRectangle.Fill, -20%)
      DisabledFill: =CommitRectangle.Fill
      Fill: =RGBA(255, 255, 255, 1)
      HoverFill: =ColorFade(CommitRectangle.Fill, 20%)
      Width: =550
      ZIndex: =1
      Height: =1080
      BorderColor: =ColorFade(CommitRectangle.Fill, -20%)
      Visible: =showCommitDialog

    lblCommitPopUpTitle As label:
      Text: ="COMMIT AND PUSH CHANGES TO GIT"
      Align: =Align.Center
      Size: =16
      ZIndex: =11
      Height: =55
      Width: =550
      FontWeight: =Semibold
      Visible: =showCommitDialog

    icoCommitDialogClose As icon.Cancel:
      HoverBorderColor: =ColorFade(icoCommitDialogClose.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoCommitDialogClose.BorderColor, -20%)
      DisabledFill: =ColorFade(icoCommitDialogClose.Fill, -80%)
      PressedFill: =ColorFade(icoCommitDialogClose.Fill, -20%)
      X: =498
      Width: =52
      Height: =55
      PaddingBottom: =10
      Icon: =Icon.Cancel
      PaddingLeft: =10
      HoverFill: =ColorFade(icoCommitDialogClose.Fill, 20%)
      BorderColor: =ColorFade(icoCommitDialogClose.Fill, -20%)
      HoverColor: =ColorFade(icoCommitDialogClose.Color, 20%)
      PaddingTop: =10
      ZIndex: =14
      PaddingRight: =10
      PressedColor: =ColorFade(icoCommitDialogClose.Color, -20%)
      OnSelect: |-
        =UpdateContext({showDialogOverlay: false, showCommitDialog: false})

    tglCreateBranch As toggleSwitch:
      TrueText: ="Create New Branch"
      FalseText: ="Create New Branch"
      FontWeight: =FontWeight.Semibold
      Y: =100
      X: =30
      ZIndex: =16
      Width: =225
      FalseFill: =RGBA(237, 237, 237, 1)
      HandleFill: =If(tglCreateBranch.Value, PrimaryColor1Value, PrimaryColor2Value)
      HoverBorderColor: =ColorFade(tglCreateBranch.BorderColor, 20%)
      PressedBorderColor: =ColorFade(tglCreateBranch.BorderColor, -20%)
      TrueHoverFill: =ColorFade(tglCreateBranch.TrueFill, 20%)
      FalseHoverFill: =ColorFade(tglCreateBranch.FalseFill, 20%)

    cntCommitAlwaysVisible As groupContainer:
      ZIndex: =17
      DisplayMode: =DisplayMode.Edit
      Height: =483
      Width: =510
      Y: =If(tglCreateBranch.Value = false, txtBranchToCreate.Y, txtBranchToCreate.Y + 45)
      X: =29
      Fill: =RGBA(0, 0, 0, 0)
      BorderStyle: =BorderStyle.Solid
      BorderColor: =RGBA(0, 0, 0, 0)

      lblBranch As label:
        Text: =If(tglCreateBranch.Value, "Based On","Branch")
        ZIndex: =5
        Visible: =showCommitDialog
        PaddingLeft: =0
        Height: =45
        Width: =500
        PaddingTop: =0
        X: =1
        FontWeight: =FontWeight.Semibold

      drpAdoBranches As dropdown:
        Items: =SelectedRepoBranches
        Default: =locDefaultBranchForCommit
        ChevronHoverFill: =ColorFade(drpAdoBranches.ChevronFill, 20%)
        X: =1
        Y: =45
        Height: =45
        Width: =498
        Visible: =showCommitDialog
        ZIndex: =2
        PressedFill: =drpAdoBranches.Color
        PressedColor: =drpAdoBranches.Fill
        PressedBorderColor: =drpAdoBranches.HoverBorderColor
        HoverBorderColor: =ColorFade(drpAdoBranches.BorderColor, 20%)
        HoverColor: =ColorFade(drpAdoBranches.Color, 20%)
        ChevronHoverBackground: =ColorFade(drpAdoBranches.ChevronBackground, 20%)
        HoverFill: =ColorFade(drpAdoBranches.SelectionFill, 20%)
        OnChange: =
        OnSelect: =

      lblCommitComment As label:
        Text: ="Commit Message"
        ZIndex: =4
        PaddingLeft: =0
        Height: =45
        Width: =498
        Y: =90
        X: =1
        FontWeight: =FontWeight.Semibold
        Visible: =showCommitDialog

      txtCommitMessage As text:
        Default: =""
        HintText: ="Enter a commit mesage"
        Visible: =showCommitDialog
        ZIndex: =3
        Height: =90
        Width: =498
        Y: =135
        X: =1
        HoverFill: =ColorFade(txtCommitMessage.Fill, 20%)
        PressedFill: =txtCommitMessage.Fill
        HoverColor: =ColorFade(txtCommitMessage.Color, 20%)
        PressedColor: =txtCommitMessage.Color
        HoverBorderColor: =ColorFade(txtCommitMessage.BorderColor, 20%)
        EnableSpellCheck: =true
        Mode: =TextMode.MultiLine
        PressedBorderColor: =txtCommitMessage.HoverBorderColor

      tglTriggerSolutionUpgrade As toggleSwitch:
        FalseText: ="Has Deleted Solution Components"
        TrueText: ="Has Deleted Solution Components"
        PressedBorderColor: =ColorFade(tglTriggerSolutionUpgrade.BorderColor, -20%)
        HoverBorderColor: =ColorFade(tglTriggerSolutionUpgrade.BorderColor, 20%)
        TrueHoverFill: =ColorFade(tglTriggerSolutionUpgrade.TrueFill, 20%)
        FalseHoverFill: =ColorFade(tglTriggerSolutionUpgrade.FalseFill, 20%)
        Width: =360
        HandleFill: =If(tglTriggerSolutionUpgrade.Value, PrimaryColor1Value, PrimaryColor2Value)
        X: =1
        FalseFill: =RGBA(237, 237, 237, 1)
        Y: =243
        FontWeight: =FontWeight.Semibold
        ZIndex: =6

    txtBranchToCreate As text:
      HintText: ="Enter new branch name to create branch"
      Default: =""
      ZIndex: =5
      Height: =45
      Width: =500
      Y: =145
      X: =30
      HoverFill: =ColorFade(txtBranchToCreate.Fill, 20%)
      PressedFill: =txtBranchToCreate.Fill
      HoverColor: =ColorFade(txtBranchToCreate.Color, 20%)
      PressedColor: =txtBranchToCreate.Color
      PressedBorderColor: =txtBranchToCreate.HoverBorderColor
      HoverBorderColor: =ColorFade(txtBranchToCreate.BorderColor, 20%)
      Visible: =tglCreateBranch.Value

    icoCommitDownArrow As icon.ArrowDown:
      ZIndex: =19
      Icon: =Icon.ArrowUp
      HoverBorderColor: =ColorFade(icoCommitDownArrow.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoCommitDownArrow.BorderColor, -20%)
      BorderColor: =ColorFade(icoCommitDownArrow.Fill, -20%)
      HoverFill: =ColorFade(icoCommitDownArrow.Fill, 20%)
      Height: =45
      PressedFill: =ColorFade(icoCommitDownArrow.Fill, -20%)
      Y: =190
      X: =243
      PressedColor: =ColorFade(icoCommitDownArrow.Color, -20%)
      DisabledFill: =ColorFade(icoCommitDownArrow.Fill, -80%)
      HoverColor: =ColorFade(icoCommitDownArrow.Color, 20%)
      Visible: =false//tglCreateBranch.Value

    btnCommit As button:
      Text: ="COMMIT"
      PressedBorderColor: =btnCommit.Fill
      HoverBorderColor: =ColorFade(btnCommit.BorderColor, 20%)
      PressedColor: =btnCommit.Fill
      HoverColor: =ColorFade(btnCommit.Color, 20%)
      DisplayMode: =If(Len(txtCommitMessage.Text)>1, DisplayMode.Edit, DisplayMode.Disabled)
      PressedFill: =btnCommit.Color
      HoverFill: =ColorFade(btnCommit.Fill, 20%)
      X: =330
      Y: =1015
      Width: =200
      Height: =45
      ZIndex: =3
      OnSelect: |
        =UpdateContext(
            {
                showDialogOverlay: false,
                showCommitDialog: false
            }
        );
        UpdateContext(
            {
                piplineIdToRun: LookUp(
                    CustomAzureDevOps.GetPipelines(
                        drpAdoOrganizations.Selected.AccountName,
                        drpAdoProjects.Selected.name
                    ).value,
                    name = "export-solution-to-git"
                ).id
            }
        );
        UpdateContext(
            {
                locCurrentPipelineRun: LookUp(
                    LastSavedExportToGitPipelineRuns,
                    solutionUniqueName = glrSolutions.Selected.uniquename
                )
            }
        );
        Remove(
            LastSavedExportToGitPipelineRuns,
            locCurrentPipelineRun
        );
        Collect(
            LastSavedExportToGitPipelineRuns,
            {
                solutionUniqueName: glrSolutions.Selected.uniquename,
                buildId: CustomAzureDevOps.RunPipeline(
                    drpAdoOrganizations.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BAccountName',
                    drpAdoProjects.Selected.name,
                    piplineIdToRun,
                    {
                        definition: {id: piplineIdToRun},
                        variables: {
                            SolutionName: {value: glrSolutions.Selected.uniquename},
                            Email: {value: gblUser.Email},
                            UserName: {value: gblUser.FullName},
                            CommitMessage: {value: txtCommitMessage.Text},
                            Branch: {value: drpAdoBranches.Selected.DisplayName},
                            BranchToCreate: {value: txtBranchToCreate.Text},
                            ServiceConnName: {value: lblAzureDevOpsServiceConnectionValue.Text},
                            TriggerSolutionUpgrade: {value: tglTriggerSolutionUpgrade.Value},
                            BuildDefinitionId: {value: ""},
                            PipelineId: {value: piplineIdToRun}
                        }
                    }
                ).id
            }
        );
        UpdateContext(
            {
                locTempLastSavedExportToGitPipelineRunsCSV: Concat(
                    LastSavedExportToGitPipelineRuns,
                    solutionUniqueName & "," & buildId & "|"
                )
            }
        );
        UpdateContext(
            {
                locLastSavedExportToGitPipelineRunsSetting: LookUp(
                    'User Settings',
                    Name = LastSavedExportToGitPipelineRunsSettingName
                )
            }
        );
        If(
            IsBlank(locLastSavedExportToGitPipelineRunsSetting),// create it if we don't have one
            Patch(
                'User Settings',
                {
                    'App User Setting': AppUserSetting,
                    Name: LastSavedExportToGitPipelineRunsSettingName,
                    Value: locTempLastSavedExportToGitPipelineRunsCSV
                }
            ),
            Patch(
                'User Settings',
                locLastSavedExportToGitPipelineRunsSetting,
                {Value: locTempLastSavedExportToGitPipelineRunsCSV}
            )
        );
        If(
            Len(txtBranchToCreate.Text) > 0,
            UpdateContext(
                {
                    locCurrentBranchCreated: LookUp(
                        LastSavedBranchesCreated,
                        solutionUniqueName = glrSolutions.Selected.uniquename
                    )
                }
            );
            Remove(
                LastSavedBranchesCreated,
                locCurrentBranchCreated
            );
            Collect(
                LastSavedBranchesCreated,
                {
                    solutionUniqueName: glrSolutions.Selected.uniquename,
                    branchName: txtBranchToCreate.Text
                }
            );
            UpdateContext(
                {
                    locTempLastSavedBranchesCreatedCSV: Concat(
                        LastSavedBranchesCreated,
                        solutionUniqueName & "," & branchName & "|"
                    )
                }
            );
            UpdateContext(
                {
                    locLastSavedBranchesCreatedSetting: LookUp(
                        'User Settings',
                        Name = LastSavedBranchesCreatedSettingName
                    )
                }
            );
            If(
                IsBlank(locLastSavedBranchesCreatedSetting),// create it if we don't have one
                Patch(
                    'User Settings',
                    {
                        'App User Setting': AppUserSetting,
                        Name: LastSavedBranchesCreatedSettingName,
                        Value: locTempLastSavedBranchesCreatedCSV
                    }
                ),
                Patch(
                    'User Settings',
                    locLastSavedBranchesCreatedSetting,
                    {Value: locTempLastSavedBranchesCreatedCSV}
                )
            );
            
        );
        UpdateContext(
            {
                locTempLastSavedExportToGitPipelineRunsCSV: "",
                locTempLastSavedBranchesCreatedCSV: ""
            }
        );
        Select(fncResetCheckBuildStatuses);
        Reset(tglCreateBranch);
        Reset(tglTriggerSolutionUpgrade);
        Reset(txtCommitMessage);
        Reset(txtBranchToCreate);

  ImportDialog As groupContainer:
    Visible: =showImportDialog
    ZIndex: =25
    Height: =1080
    Width: =550
    Y: =0
    X: =1370
    BorderColor: =RGBA(0, 0, 0, 1)
    Fill: =RGBA(0, 0, 0, 0)
    BorderStyle: =BorderStyle.Solid
    DisplayMode: =DisplayMode.Edit

    CommitDialogRectangle As rectangle:
      ZIndex: =1
      Height: =1080
      Width: =550
      Fill: =RGBA(255, 255, 255, 1)
      BorderColor: =ColorFade(CommitDialogRectangle.Fill, -20%)
      HoverFill: =ColorFade(CommitDialogRectangle.Fill, 20%)
      PressedFill: =ColorFade(CommitDialogRectangle.Fill, -20%)
      DisabledFill: =CommitDialogRectangle.Fill

    lblImportDialogTitle As label:
      Text: ="IMPORT FROM AZURE DEVOPS"
      Align: =Center
      ZIndex: =7
      FontWeight: =Semibold
      Height: =55
      Width: =550
      Size: =20

    icoImportDialogClose As icon.Cancel:
      PaddingTop: =10
      Height: =55
      Width: =55
      ZIndex: =8
      X: =498
      BorderColor: =ColorFade(icoImportDialogClose.Fill, -20%)
      HoverFill: =ColorFade(icoImportDialogClose.Fill, 20%)
      PaddingLeft: =10
      PaddingBottom: =10
      PaddingRight: =10
      PressedColor: =ColorFade(icoImportDialogClose.Color, -20%)
      PressedFill: =ColorFade(icoImportDialogClose.Fill, -20%)
      DisabledFill: =ColorFade(icoImportDialogClose.Fill, -80%)
      Icon: =Icon.Cancel
      HoverBorderColor: =ColorFade(icoImportDialogClose.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoImportDialogClose.BorderColor, -20%)
      HoverColor: =ColorFade(icoImportDialogClose.Color, 20%)
      OnSelect: |-
        =UpdateContext({showDialogOverlay:false, showImportDialog:false})

    lblSolutionBuild As label:
      Text: ="Solution"
      FontWeight: =FontWeight.Semibold
      X: =30
      Y: =100
      Width: =100
      ZIndex: =15
      PaddingLeft: =0

    drpAdoPipelinesWithBuild As dropdown:
      Items: |
        =SelectedProjectPipelines
      ChevronHoverFill: =ColorFade(drpAdoPipelinesWithBuild.ChevronFill, 20%)
      ChevronHoverBackground: =ColorFade(drpAdoPipelinesWithBuild.ChevronBackground, 20%)
      HoverColor: =ColorFade(drpAdoPipelinesWithBuild.Color, 20%)
      PressedColor: =drpAdoPipelinesWithBuild.Fill
      HoverBorderColor: =ColorFade(drpAdoPipelinesWithBuild.BorderColor, 20%)
      PressedBorderColor: =drpAdoPipelinesWithBuild.HoverBorderColor
      PressedFill: =drpAdoPipelinesWithBuild.Color
      HoverFill: =ColorFade(drpAdoPipelinesWithBuild.SelectionFill, 20%)
      X: =30
      Y: =140
      Width: =506
      ZIndex: =14

    lblBuildNumber As label:
      Text: ="Build Number"
      ZIndex: =17
      FontWeight: =FontWeight.Semibold
      Width: =486
      Y: =180
      X: =30
      PaddingLeft: =0

    dpBuildNumber As dropdown:
      Items: |-
        =CustomAzureDevOps.GetPipelineRuns(
            drpAdoOrganizations.Selected.AccountName,
            drpAdoProjects.Selected.name,
            drpAdoPipelinesWithBuild.Selected.id
        ).value
      ZIndex: =16
      Width: =506
      X: =30
      Y: =220
      HoverBorderColor: =ColorFade(dpBuildNumber.BorderColor, 20%)
      PressedFill: =dpBuildNumber.Color
      HoverColor: =ColorFade(dpBuildNumber.Color, 20%)
      HoverFill: =ColorFade(dpBuildNumber.SelectionFill, 20%)
      ChevronHoverBackground: =ColorFade(dpBuildNumber.ChevronBackground, 20%)
      ChevronHoverFill: =ColorFade(dpBuildNumber.ChevronFill, 20%)
      PressedColor: =dpBuildNumber.Fill
      PressedBorderColor: =dpBuildNumber.HoverBorderColor

    btnImport As button:
      Text: ="IMPORT"
      X: =330
      ZIndex: =2
      Height: =45
      Width: =200
      Y: =1010
      PressedColor: =btnImport.Fill
      PressedBorderColor: =btnImport.Fill
      PressedFill: =btnImport.Color
      HoverColor: =ColorFade(btnImport.Color, 20%)
      HoverBorderColor: =ColorFade(btnImport.BorderColor, 20%)
      HoverFill: =ColorFade(btnImport.Fill, 20%)
      OnSelect: |
        =UpdateContext(
            {
                showImportDialog: false,
                showDialogOverlay: false
            }
        );
        UpdateContext(
            {
                piplineToRun: LookUp(
                    CustomAzureDevOps.GetPipelines(
                        drpAdoOrganizations.Selected.AccountName,
                        drpAdoProjects.Selected.name
                    ).value,
                    name = "import-unmanaged-to-dev-environment"
                )
            }
        );
        UpdateContext(
            {
                locImportingSolutionBuildId: CustomAzureDevOps.RunPipeline(
                    drpAdoOrganizations.Selected.AccountName,
                    drpAdoProjects.Selected.name,
                    piplineToRun.id,
                    {
                        definition: {id: piplineToRun.id},
                        variables: {
                            SolutionName: {value: drpAdoPipelinesWithBuild.Selected.DisplayName},
                            Email: {value: User().Email},
                            UserName: {value: User().FullName},
                            CommitMessage: {value: ""},
                            Branch: {value: ""},
                            BranchToCreate: {value: ""},
                            ServiceConnName: {value: lblAzureDevOpsServiceConnectionValue.Text},
                            TriggerSolutionUpgrade: {value: ""},
                            BuildDefinitionId: {value: drpAdoPipelinesWithBuild.Selected.id},
                            PipelineId: {value: dpBuildNumber.Selected.id}
                        }
                    }
                ).id
            }
        );
        Select(fncResetCheckBuildStatuses);

  SettingsDialog As groupContainer:
    Fill: =RGBA(0, 0, 0, .5)
    BorderColor: =RGBA(0, 0, 0, 1)
    X: =1370
    Y: =0
    Width: =550
    Height: =1080
    ZIndex: =26
    Visible: =showSettingsDialog
    DisplayMode: =DisplayMode.Edit
    BorderStyle: =BorderStyle.Solid

    SettingsRectangle As rectangle:
      ZIndex: =1
      Height: =1080
      Width: =550
      Fill: =RGBA(255, 255, 255, 1)
      BorderColor: =ColorFade(SettingsRectangle.Fill, -20%)
      HoverFill: =ColorFade(SettingsRectangle.Fill, 20%)
      PressedFill: =ColorFade(SettingsRectangle.Fill, -20%)
      DisabledFill: =SettingsRectangle.Fill

    lblSettingsPopUpTitle As label:
      Text: ="SETTINGS"
      Align: =Center
      Size: =16
      FontWeight: =Semibold
      Width: =546
      Height: =64
      ZIndex: =2

    icoSettingsClose As icon.Cancel:
      Height: =55
      Width: =55
      PaddingRight: =10
      Y: =8
      PaddingLeft: =10
      PaddingBottom: =10
      PaddingTop: =10
      X: =492
      Icon: =Icon.Cancel
      ZIndex: =3
      HoverBorderColor: =ColorFade(icoSettingsClose.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoSettingsClose.BorderColor, -20%)
      BorderColor: =ColorFade(icoSettingsClose.Fill, -20%)
      HoverFill: =ColorFade(icoSettingsClose.Fill, 20%)
      PressedFill: =ColorFade(icoSettingsClose.Fill, -20%)
      DisabledFill: =ColorFade(icoSettingsClose.Fill, -80%)
      HoverColor: =ColorFade(icoSettingsClose.Color, 20%)
      PressedColor: =ColorFade(icoSettingsClose.Color, -20%)
      OnSelect: |-
        =UpdateContext({showDialogOverlay:false,showSettingsDialog:false})

    lblAzureDevOpsOrg As label:
      Text: ="Azure DevOps Organization"
      ZIndex: =9
      PaddingLeft: =0
      Height: =45
      Width: =500
      PaddingTop: =0
      Y: =100
      X: =30
      FontWeight: =FontWeight.Semibold

    drpAdoOrganizations As dropdown:
      Items: =Orgs
      Default: =DefaultOrg.Value
      ZIndex: =5
      Width: =500
      X: =30
      Y: =145
      Height: =45
      HoverBorderColor: =ColorFade(drpAdoOrganizations.BorderColor, 20%)
      PressedFill: =drpAdoOrganizations.Color
      HoverColor: =ColorFade(drpAdoOrganizations.Color, 20%)
      HoverFill: =ColorFade(drpAdoOrganizations.SelectionFill, 20%)
      ChevronHoverBackground: =ColorFade(drpAdoOrganizations.ChevronBackground, 20%)
      ChevronHoverFill: =ColorFade(drpAdoOrganizations.ChevronFill, 20%)
      PressedColor: =drpAdoOrganizations.Fill
      PressedBorderColor: =drpAdoOrganizations.HoverBorderColor
      OnChange: |+
        =Set(SelectedOrg, drpAdoOrganizations.Selected);
        ClearCollect(SelectedOrgProjects, CustomAzureDevOps.GetProjects(SelectedOrg.AccountName).value);
        Set(SelectedProject, First(SelectedOrgProjects));
        ClearCollect(SelectedProjectPipelines, Filter(CustomAzureDevOps.GetPipelines(SelectedOrg.AccountName, SelectedProject.name).value, StartsWith(name,"build-deploy-")));
        Set(SelectedProjectServiceEndPoints, CustomAzureDevOps.GetServiceEndpoints(SelectedOrg.AccountName,SelectedProject.name,{'api-version':"6.1-preview"}));
        ClearCollect(SelectedProjectRepos, CustomAzureDevOps.GetGitRepos(SelectedOrg.AccountName,SelectedProject.name).value);
        
        

    lblAzureDevOpsProject As label:
      Text: ="Azure DevOps Project"
      FontWeight: =FontWeight.Semibold
      X: =34
      Y: =190
      Width: =458
      Height: =45
      ZIndex: =11
      PaddingLeft: =0
      PaddingTop: =0

    drpAdoProjects As dropdown:
      Default: =DefaultProject.Value
      Items: =SelectedOrgProjects
      ZIndex: =6
      Height: =45
      Y: =235
      X: =30
      Width: =500
      HoverBorderColor: =ColorFade(drpAdoProjects.BorderColor, 20%)
      PressedFill: =drpAdoProjects.Color
      HoverColor: =ColorFade(drpAdoProjects.Color, 20%)
      HoverFill: =ColorFade(drpAdoProjects.SelectionFill, 20%)
      ChevronHoverBackground: =ColorFade(drpAdoProjects.ChevronBackground, 20%)
      PressedColor: =drpAdoProjects.Fill
      PressedBorderColor: =drpAdoProjects.HoverBorderColor
      ChevronHoverFill: =ColorFade(drpAdoProjects.ChevronFill, 20%)
      OnChange: =Select(fncCollectSelectedProjectRepos)

    lblAzureDevOpsRepo As label:
      Text: ="Azure DevOps Repository"
      PaddingTop: =0
      X: =30
      FontWeight: =FontWeight.Semibold
      Height: =45
      Width: =458
      Y: =286
      ZIndex: =12
      PaddingLeft: =0

    drpRepos As dropdown:
      Items: =SelectedProjectRepos
      Default: =DefaultRepo.Value
      ZIndex: =4
      Width: =500
      X: =30
      Y: =331
      Height: =45
      PressedColor: =drpRepos.Fill
      PressedBorderColor: =drpRepos.HoverBorderColor
      HoverBorderColor: =ColorFade(drpRepos.BorderColor, 20%)
      PressedFill: =drpRepos.Color
      HoverColor: =ColorFade(drpRepos.Color, 20%)
      HoverFill: =ColorFade(drpRepos.SelectionFill, 20%)
      ChevronHoverBackground: =ColorFade(drpRepos.ChevronBackground, 20%)
      ChevronHoverFill: =ColorFade(drpRepos.ChevronFill, 20%)
      OnChange: =Select(fncCollectSelectedRepoBranches)
      OnSelect: =

    lblAzureDevOpsServiceConnection As label:
      Text: ="Azure DevOps Service Connection"
      PaddingTop: =0
      Y: =376
      FontWeight: =FontWeight.Semibold
      X: =30
      Width: =458
      PaddingLeft: =0
      ZIndex: =15
      Height: =45

    lblAzureDevOpsServiceConnectionValue As label:
      Text: =glrlEnvironments.Selected.properties.linkedEnvironmentMetadata.instanceUrl
      ZIndex: =16
      Height: =55
      Width: =500
      Y: =406
      X: =30

    btnSaveSettings As button:
      Text: ="SAVE"
      DisplayMode: =If(locIsSaveSettingsEnabled, DisplayMode.Edit, DisplayMode.Disabled)
      Width: =200
      X: =330
      Y: =1015
      HoverFill: =ColorFade(btnSaveSettings.Fill, 20%)
      PressedBorderColor: =btnSaveSettings.Fill
      Height: =45
      ZIndex: =13
      PressedColor: =btnSaveSettings.Fill
      HoverColor: =ColorFade(btnSaveSettings.Color, 20%)
      PressedFill: =btnSaveSettings.Color
      HoverBorderColor: =ColorFade(btnSaveSettings.BorderColor, 20%)
      OnSelect: |-
        =UpdateContext(
            {
                showDialogOverlay: false,
                showSettingsDialog: false
            }
        );
        
        // Save new settings values in CDS
        Patch(
            'User Settings',
            DefaultOrg,
            {Value: drpAdoOrganizations.Selected.AccountName}
        );
        Patch(
            'User Settings',
            DefaultProject,
            {Value: drpAdoProjects.Selected.name}
        );
        Patch(
            'User Settings',
            DefaultRepo,
            {Value: drpRepos.Selected.name}
        );
        Refresh('App User Settings');
        Navigate(RedirectToHome);

  PullRequestDialog As groupContainer:
    ZIndex: =27
    DisplayMode: =DisplayMode.Edit
    Height: =1080
    Width: =550
    Y: =0
    X: =1370
    Fill: =RGBA(0, 0, 0, 0)
    BorderStyle: =BorderStyle.Solid
    BorderColor: =RGBA(0, 0, 0, 1)
    Visible: =showPullRequestDialog

    rctPullRequestDialog As rectangle:
      ZIndex: =1
      Height: =1080
      Width: =550
      Fill: =RGBA(255, 255, 255, 1)
      BorderColor: =ColorFade(rctPullRequestDialog.Fill, -20%)
      HoverFill: =ColorFade(rctPullRequestDialog.Fill, 20%)
      PressedFill: =ColorFade(rctPullRequestDialog.Fill, -20%)
      DisabledFill: =rctPullRequestDialog.Fill

    lblPullRequestDialogTitle As label:
      Text: ="CREATE PULL REQUEST"
      Align: =Center
      Size: =16
      ZIndex: =2
      Height: =64
      Width: =546
      FontWeight: =Semibold

    icoPullRequestDialogClose As icon.Cancel:
      Icon: =Icon.Cancel
      DisabledFill: =ColorFade(icoPullRequestDialogClose.Fill, -80%)
      PressedFill: =ColorFade(icoPullRequestDialogClose.Fill, -20%)
      HoverFill: =ColorFade(icoPullRequestDialogClose.Fill, 20%)
      X: =495
      Y: =4
      Width: =55
      Height: =55
      BorderColor: =ColorFade(icoPullRequestDialogClose.Fill, -20%)
      PaddingRight: =10
      PressedColor: =ColorFade(icoPullRequestDialogClose.Color, -20%)
      HoverBorderColor: =ColorFade(icoPullRequestDialogClose.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoPullRequestDialogClose.BorderColor, -20%)
      ZIndex: =3
      PaddingTop: =10
      PaddingBottom: =10
      PaddingLeft: =10
      HoverColor: =ColorFade(icoPullRequestDialogClose.Color, 20%)
      OnSelect: |-
        =UpdateContext({showDialogOverlay:false,showPullRequestDialog:false})

    lblSourceBranch As label:
      Text: ="Source Branch"
      FontWeight: =FontWeight.Semibold
      X: =30
      Y: =100
      Width: =500
      Height: =45
      ZIndex: =4
      PaddingLeft: =0
      PaddingTop: =0

    drpPullRequestSourceBranches As dropdown:
      Items: =SelectedRepoBranches
      Default: =locDefaultBranchForCommit
      PressedColor: =drpPullRequestSourceBranches.Fill
      ChevronHoverFill: =ColorFade(drpPullRequestSourceBranches.ChevronFill, 20%)
      HoverColor: =ColorFade(drpPullRequestSourceBranches.Color, 20%)
      PressedBorderColor: =drpPullRequestSourceBranches.HoverBorderColor
      HoverBorderColor: =ColorFade(drpPullRequestSourceBranches.BorderColor, 20%)
      HoverFill: =ColorFade(drpPullRequestSourceBranches.SelectionFill, 20%)
      PressedFill: =drpPullRequestSourceBranches.Color
      ChevronHoverBackground: =ColorFade(drpPullRequestSourceBranches.ChevronBackground, 20%)
      Y: =145
      X: =30
      Width: =500
      Height: =45
      ZIndex: =5

    lblTargetBranch As label:
      Text: ="Target Branch"
      ZIndex: =6
      PaddingLeft: =0
      Height: =45
      Width: =500
      PaddingTop: =0
      Y: =190
      X: =30
      FontWeight: =FontWeight.Semibold

    icoPullRequestDownArrow As icon.ArrowDown:
      BorderColor: =ColorFade(icoPullRequestDownArrow.Fill, -20%)
      HoverColor: =ColorFade(icoPullRequestDownArrow.Color, 20%)
      PressedColor: =ColorFade(icoPullRequestDownArrow.Color, -20%)
      HoverFill: =ColorFade(icoPullRequestDownArrow.Fill, 20%)
      PressedFill: =ColorFade(icoPullRequestDownArrow.Fill, -20%)
      Y: =190
      X: =243
      ZIndex: =9
      DisabledFill: =ColorFade(icoPullRequestDownArrow.Fill, -80%)
      HoverBorderColor: =ColorFade(icoPullRequestDownArrow.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoPullRequestDownArrow.BorderColor, -20%)
      Height: =45

    drpPullRequestTargetBranches As dropdown:
      Items: =SelectedRepoBranches
      Default: =locTargetBranchForPullRequest
      HoverBorderColor: =ColorFade(drpPullRequestTargetBranches.BorderColor, 20%)
      HoverFill: =ColorFade(drpPullRequestTargetBranches.SelectionFill, 20%)
      PressedFill: =drpPullRequestTargetBranches.Color
      ChevronHoverFill: =ColorFade(drpPullRequestTargetBranches.ChevronFill, 20%)
      PressedColor: =drpPullRequestTargetBranches.Fill
      ChevronHoverBackground: =ColorFade(drpPullRequestTargetBranches.ChevronBackground, 20%)
      PressedBorderColor: =drpPullRequestTargetBranches.HoverBorderColor
      HoverColor: =ColorFade(drpPullRequestTargetBranches.Color, 20%)
      Y: =235
      X: =30
      Width: =500
      Height: =45
      ZIndex: =7

    lblPullRequestTitle As label:
      Text: ="Title"
      PaddingLeft: =0
      FontWeight: =FontWeight.Semibold
      X: =30
      Y: =280
      Width: =500
      Height: =45
      ZIndex: =13

    txtPullRequestTitle As text:
      Default: =""
      HintText: ="Enter a Pull Request title"
      PressedFill: =txtPullRequestTitle.Fill
      HoverFill: =ColorFade(txtPullRequestTitle.Fill, 20%)
      PressedColor: =txtPullRequestTitle.Color
      HoverColor: =ColorFade(txtPullRequestTitle.Color, 20%)
      PressedBorderColor: =txtPullRequestTitle.HoverBorderColor
      HoverBorderColor: =ColorFade(txtPullRequestTitle.BorderColor, 20%)
      X: =29
      Y: =325
      Width: =500
      Height: =45
      ZIndex: =10

    lblPullRequestDescription As label:
      Text: ="Description"
      PaddingLeft: =0
      FontWeight: =FontWeight.Semibold
      X: =29
      Y: =370
      Width: =500
      Height: =45
      ZIndex: =12

    txtPullRequestDescription As text:
      Default: =""
      HintText: ="Enter a Pull Request description"
      X: =30
      Y: =415
      Width: =500
      Mode: =TextMode.MultiLine
      EnableSpellCheck: =true
      Height: =90
      PressedFill: =txtPullRequestDescription.Fill
      ZIndex: =11
      HoverFill: =ColorFade(txtPullRequestDescription.Fill, 20%)
      PressedColor: =txtPullRequestDescription.Color
      HoverColor: =ColorFade(txtPullRequestDescription.Color, 20%)
      PressedBorderColor: =txtPullRequestDescription.HoverBorderColor
      HoverBorderColor: =ColorFade(txtPullRequestDescription.BorderColor, 20%)

    btnCreate As button:
      Text: ="CREATE"
      X: =330
      ZIndex: =8
      Height: =45
      DisplayMode: |-
        =If(
            Len(txtPullRequestTitle.Text) > 0,
            DisplayMode.Edit,
            DisplayMode.Disabled
        )
      Width: =200
      Y: =1015
      PressedColor: =btnCreate.Fill
      PressedBorderColor: =btnCreate.Fill
      HoverFill: =ColorFade(btnCreate.Fill, 20%)
      PressedFill: =btnCreate.Color
      HoverColor: =ColorFade(btnCreate.Color, 20%)
      HoverBorderColor: =ColorFade(btnCreate.BorderColor, 20%)
      OnSelect: |
        =UpdateContext(
            {
                showDialogOverlay: false,
                showPullRequestDialog: false
            }
        );
        UpdateContext(
            {
                locCurrentPullRequest: LookUp(
                    LastSavedPullRequests,
                    solutionUniqueName = glrSolutions.Selected.uniquename
                )
            }
        );
        Remove(
            LastSavedPullRequests,
            locCurrentPullRequest
        );
        Collect(
            LastSavedPullRequests,
            {
                solutionUniqueName: glrSolutions.Selected.uniquename,
                pullRequestId: CustomAzureDevOps.CreatePullRequest(
                    drpAdoOrganizations.Selected.AccountName,
                    drpAdoProjects.Selected.name,
                    drpRepos.Selected.id,
                    {
                        sourceRefName: drpPullRequestSourceBranches.Selected.name,
                        targetRefName: drpPullRequestTargetBranches.Selected.name,
                        title: txtPullRequestTitle.Text,
                        description: txtPullRequestDescription.Text
                    }
                ).pullRequestId,
                targetBranchName: drpPullRequestTargetBranches.Selected.name
            }
        );
        UpdateContext(
            {
                locTempPullRequestsCSV: Concat(
                    LastSavedPullRequests,
                    solutionUniqueName & "," & pullRequestId & "," & targetBranchName & "|"
                )
            }
        );
        UpdateContext({locLatestPullRequestsSettingName: "LastSavedPullRequests"});
        UpdateContext(
            {
                locLatestPullRequestsSetting: LookUp(
                    'User Settings',
                    Name = locLatestPullRequestsSettingName
                )
            }
        );
        If(
            IsBlank(locLatestPullRequestsSetting),// create it if we don't have one
            Patch(
                'User Settings',
                {
                    'App User Setting': AppUserSetting,
                    Name: locLatestPullRequestsSettingName,
                    Value: locTempPullRequestsCSV
                }
            ),
            Patch(
                'User Settings',
                locLatestPullRequestsSetting,
                {Value: locTempPullRequestsCSV}
            )
        );
        UpdateContext({locTempPullRequestsCSV: ""});
        Select(fncResetCheckBuildStatuses);
        Reset(txtPullRequestTitle);
        Reset(txtPullRequestDescription);

  imgLogo As image:
    Image: =If(IsBlank(LookUp(Assets, Theme.Name = ThemeName && Name = "BrandLogo").ImageUrl), logoContoso, LookUp(Assets, Theme.Name = ThemeName && Name = "BrandLogo").ImageUrl)
    ZIndex: =18
    Height: =57
    Width: =61
    Y: =6
    X: =24
    HoverBorderColor: =ColorFade(imgLogo.BorderColor, 20%)
    PressedBorderColor: =ColorFade(imgLogo.BorderColor, -20%)
    BorderColor: =ColorFade(imgLogo.Fill, -20%)
    HoverFill: =ColorFade(imgLogo.Fill, 20%)
    PressedFill: =ColorFade(imgLogo.Fill, -20%)

  lblEnvironment As label:
    Text: ="Environment"
    ZIndex: =15
    Height: =29
    Width: =241
    Y: =8
    X: =1619
    Size: =10
    Color: =RGBA(255, 255, 255, 1)
    OnSelect: |-
      =UpdateContext(
          {
              showDialogOverlay: true,
              showEnvironmentDialog: true
          }
      )

  imgEnvironment As image:
    Image: |-
      ="data:image/svg+xml,"
      & EncodeUrl("<svg width='16px' height='16px' xmlns='http://www.w3.org/2000/svg'><g><path fill='#ffffff' class='image-264' d='M15,10h-1.809C13.702,9.117,14,8.094,14,7c0-3.314-2.686-6-6-6S2,3.686,2,7c0,1.094,0.298,2.117,0.809,3H1l-1,5h16L15,10z     M4.854,10.854l-0.708-0.708C3.859,9.795,3.606,9.417,3.422,8.997h1.752c0.182,1.03,0.498,1.933,0.91,2.618   C5.632,11.427,5.228,11.16,4.854,10.854z M6.187,8.997h3.626C9.448,10.873,8.619,12,8,12S6.552,10.873,6.187,8.997z M6,7  c0-0.351,0.019-0.682,0.048-1.003h3.904C9.981,6.318,10,6.649,10,7c0,0.349-0.019,0.679-0.048,0.997H6.048C6.019,7.679,6,7.349,6,7z     M8,2c0.619,0,1.447,1.124,1.812,2.997H6.188C6.553,3.124,7.381,2,8,2z M13,7c0,0.341-0.035,0.675-0.101,0.997h-1.944   C10.982,7.672,11,7.341,11,7c0-0.342-0.018-0.676-0.045-1.003h1.944C12.965,6.321,13,6.657,13,7z M10.826,8.997h1.752   c-0.184,0.42-0.437,0.798-0.723,1.148l-0.708,0.708c-0.373,0.305-0.778,0.573-1.229,0.761C10.328,10.93,10.644,10.027,10.826,8.997z   M12.575,4.997h-1.75c-0.182-1.028-0.498-1.929-0.909-2.612C11.104,2.88,12.058,3.821,12.575,4.997z M6.084,2.385    C5.673,3.068,5.357,3.97,5.175,4.997h-1.75C3.942,3.821,4.896,2.88,6.084,2.385z M3.101,5.997h1.944C5.018,6.324,5,6.658,5,7    c0,0.341,0.018,0.672,0.045,0.997H3.101C3.035,7.675,3,7.341,3,7C3,6.657,3.035,6.321,3.101,5.997z M1.22,14l0.6-3h1.717    C4.635,12.225,6.225,13,8,13s3.365-0.775,4.463-2h1.717l0.6,3H1.22z'></path></g></svg>")
      
      //LookUp(ThemeStyles, Name = "PrimaryColor4Value").Value
    ZIndex: =14
    Y: =16
    BorderColor: =ColorFade(imgEnvironment.Fill, -20%)
    PressedFill: =ColorFade(imgEnvironment.Fill, -20%)
    Height: =43
    Width: =50
    X: =1569
    HoverBorderColor: =ColorFade(imgEnvironment.BorderColor, 20%)
    PressedBorderColor: =ColorFade(imgEnvironment.BorderColor, -20%)
    HoverFill: =ColorFade(imgEnvironment.Fill, 20%)
    OnSelect: |-
      =UpdateContext(
          {
              showDialogOverlay: true,
              showEnvironmentDialog: true
          }
      )

  icoSettings As icon.Settings:
    Icon: =Icon.Settings
    Color: =PrimaryColor2TextValue
    HoverColor: =ColorFade(icoSettings.Color, 20%)
    PressedColor: =ColorFade(icoSettings.Color, -20%)
    BorderColor: =ColorFade(icoSettings.Fill, -20%)
    HoverFill: =ColorFade(icoSettings.Fill, 20%)
    PressedFill: =ColorFade(icoSettings.Fill, -20%)
    Width: =27
    Y: =17
    X: =1869
    ZIndex: =17
    DisabledFill: =ColorFade(icoSettings.Fill, -80%)
    HoverBorderColor: =ColorFade(icoSettings.BorderColor, 20%)
    PressedBorderColor: =ColorFade(icoSettings.BorderColor, -20%)
    Height: =35
    OnSelect: |-
      =UpdateContext({showDialogOverlay:true,showSettingsDialog:true})

  lblEnvironmentName As label:
    Text: =glrlEnvironments.Selected.properties.linkedEnvironmentMetadata.friendlyName
    ZIndex: =16
    Height: =29
    Width: =241
    Y: =30
    X: =1619
    Size: =12
    Color: =RGBA(255, 255, 255, 1)
    OnSelect: |-
      =UpdateContext(
          {
              showDialogOverlay: true,
              showEnvironmentDialog: true
          }
      )

  PreLoader As ff9831bc4b09407c96273781d0834797:
    SpinnerColorHex: =LookUp(PreLoader.Styles, Name = "PrimaryColor2Value").Value
    IsLoading: =showLoader
    AnimatedGIF: |-
      ="https://aka.ms/preloadergif"
    Text: ="LOADING..."
    Color: =
    Styles: =ComponentStyles
    Height: =1012
    Fill: =RGBA(255, 255, 255, 1)
    Visible: =PreLoader.IsLoading
    X: =0
    Y: =68
    ZIndex: =13
    Width: =1920
    OnReset: |-
      =Set(PrimaryColor1Value,                  ColorValue(LookUp(Self.Styles, Name = "PrimaryColor1Value").Value));
      Set(PrimaryColor1TextValue,              ColorValue(LookUp(Self.Styles, Name = "PrimaryColor1TextValue").Value));
      Set(PrimaryColor2Value,                  ColorValue(LookUp(Self.Styles, Name = "PrimaryColor2Value").Value));
      Set(PrimaryColor2TextValue,              ColorValue(LookUp(Self.Styles, Name = "PrimaryColor2TextValue").Value));
      Set(PrimaryColor3Value,                  ColorValue(LookUp(Self.Styles, Name = "PrimaryColor3Value").Value));
      Set(PrimaryColor3TextValue,              ColorValue(LookUp(Self.Styles, Name = "PrimaryColor3TextValue").Value));
      Set(defaultLabelColorValue,              ColorValue(LookUp(Self.Styles, Name = "defaultLabelColorValue").Value));
      Set(RadiusValue,                         Value(LookUp(Self.Styles,  Name = "RadiusValue").Value));
      Set(TextBodyFontFaceValue, 			  	 LookUp(Self.Styles, Name = "TextBodyFontFaceValue").Value);
      Set(PaddingValue, 						 Value(LookUp(Self.Styles, Name = "PaddingValue").Value));
      Set(TextEmphasisFontSizeValue, 			 Value(LookUp(Self.Styles, Name = "TextEmphasisFontSizeValue").Value));
      Set(TextEmphasisFontSizePhoneValue,		 Value(LookUp(Self.Styles,Name = "TextEmphasisFontSizePhoneValue").Value));
      Set(TextBodyFontSizeValue,				 Value(LookUp(Self.Styles, Name = "TextBodyFontSizeValue").Value));
      Set(TextBodyFontSizePhoneValue,			 Value(LookUp(Self.Styles, Name = "TextBodyFontSizePhoneValue").Value));
      Set(BackgroundColorValue,				 ColorValue(LookUp(Self.Styles, Name = "BackgroundColorValue").Value));
      Set(BorderThicknessValue,				 Value(LookUp(Self.Styles, Name = "BorderThicknessValue").Value));
      Set(FocusedBorderThicknessValue,		 Value(LookUp(Self.Styles, Name = "FocusedBorderThicknessValue").Value));

  EnvironmentDialog As groupContainer:
    BorderColor: =RGBA(0, 0, 0, 1)
    BorderStyle: =BorderStyle.Solid
    Fill: =BackgroundColorValue
    X: =1420
    Y: =68
    Width: =500
    Height: =1012
    DisplayMode: =DisplayMode.Edit
    ZIndex: =23
    Visible: =showEnvironmentDialog

    icoEnvironmentsClose As icon.Cancel:
      Icon: =Icon.Cancel
      PressedColor: =ColorFade(icoEnvironmentsClose.Color, -20%)
      HoverColor: =ColorFade(icoEnvironmentsClose.Color, 20%)
      DisabledFill: =ColorFade(icoEnvironmentsClose.Fill, -80%)
      PressedFill: =ColorFade(icoEnvironmentsClose.Fill, -20%)
      HoverFill: =ColorFade(icoEnvironmentsClose.Fill, 20%)
      X: =450
      Y: =5
      Width: =50
      Height: =50
      BorderColor: =ColorFade(icoEnvironmentsClose.Fill, -20%)
      PressedBorderColor: =ColorFade(icoEnvironmentsClose.BorderColor, -20%)
      HoverBorderColor: =ColorFade(icoEnvironmentsClose.BorderColor, 20%)
      ZIndex: =3
      PaddingTop: =10
      PaddingBottom: =10
      PaddingRight: =10
      PaddingLeft: =10
      OnSelect: |-
        =UpdateContext(
            {
                showDialogOverlay: false,
                showEnvironmentDialog: false
            }
        )

    lblEnvironmentDialogEnvironments As label:
      Text: ="Environments"
      FontWeight: =Semibold
      X: =12
      Y: =10
      ZIndex: =2
      Size: =16

    glrlEnvironments As gallery.galleryVertical:
      Items: =Environments
      Default: =DefaultEnvironmentToLoad
      Width: =500
      Height: =960
      ZIndex: =1
      TemplateSize: =43
      Layout: =Layout.Vertical
      Fill: =BackgroundColorValue
      Y: =50
      TemplateFill: =If(ThisItem.IsSelected, LightGray, Transparent)
      OnSelect: =

      lblEnvironments As label:
        Text: =ThisItem.properties.linkedEnvironmentMetadata.friendlyName
        PaddingRight: =0
        PaddingBottom: =0
        ZIndex: =1
        PaddingTop: =0
        X: =25
        FontWeight: =Normal
        Size: =14
        Width: =457
        Height: =43
        Color: =RGBA(0, 0, 0, 1)
        Wrap: =false
        PaddingLeft: =0
        OnSelect: |
          =UpdateContext(
              {
                  showDialogOverlay: false,
                  showEnvironmentDialog: false
              }
          );
          Set(
              SelectedEnvironment,
              glrlEnvironments.Selected
          );
          Patch(
              'User Settings',
              DefaultEnvironment,
              {Value: glrlEnvironments.Selected.name}
          );
          Select(fncLoadSolutions);

  lblImportSolution As label:
    Text: ="IMPORT SOLUTION"
    ZIndex: =11
    Height: =54
    FontWeight: =Normal
    Width: =398
    Y: =90
    X: =52
    Size: =14
    Color: =RGBA(0, 0, 0, 1)
    OnSelect: =

  txtSearch As text:
    HintText: ="Search Solutions"
    Default: =""
    Height: =46
    ZIndex: =2
    Width: =364
    Y: =90
    X: =1532
    PaddingLeft: =10
    PressedFill: =txtSearch.Fill
    HoverColor: =ColorFade(txtSearch.Color, 20%)
    PressedColor: =txtSearch.Color
    PressedBorderColor: =txtSearch.HoverBorderColor
    HoverBorderColor: =ColorFade(txtSearch.BorderColor, 20%)
    Clear: =false
    HoverFill: =ColorFade(txtSearch.Fill, 20%)
    OnSelect: =

  icoSearch As icon.Search:
    PaddingTop: =10
    Height: =43
    Width: =51
    ZIndex: =3
    Y: =91
    X: =1845
    Color: =PrimaryColor2Value
    BorderColor: =ColorFade(icoSearch.Fill, -20%)
    HoverFill: =ColorFade(icoSearch.Fill, 20%)
    PaddingLeft: =10
    PaddingBottom: =10
    PaddingRight: =10
    HoverColor: =ColorFade(icoSearch.Color, 20%)
    PressedFill: =ColorFade(icoSearch.Fill, -20%)
    DisabledFill: =ColorFade(icoSearch.Fill, -80%)
    Icon: =If(Len(txtSearch.Text) = 0, Icon.Search, Icon.Cancel)
    HoverBorderColor: =ColorFade(icoSearch.BorderColor, 20%)
    PressedBorderColor: =ColorFade(icoSearch.BorderColor, -20%)
    PressedColor: =ColorFade(icoSearch.Color, -20%)
    OnSelect: =If(icoSearch.Icon = Icon.Cancel, Reset(txtSearch))

  imgImportStatus As image:
    Image: |-
      =Switch(
          locImportSolutionStatus.status,
          "completed",
          LookUp(
              StageStatesIcons,
              state = locImportSolutionStatus.result
          ).image,
          "inProgress",
          LookUp(
              StageStatesIcons,
              state = locImportSolutionStatus.status
          ).image,
          "notStarted",
          LookUp(
              StageStatesIcons,
              state = locImportSolutionStatus.status
          ).image,
          ""
      )
    Y: =93
    X: =7
    PressedBorderColor: =ColorFade(imgImportStatus.BorderColor, -20%)
    HoverBorderColor: =ColorFade(imgImportStatus.BorderColor, 20%)
    Width: =50
    Height: =48
    PaddingTop: =10
    HoverFill: =ColorFade(imgImportStatus.Fill, 20%)
    DisplayMode: =DisplayMode.View
    ZIndex: =19
    PressedFill: =ColorFade(imgImportStatus.Fill, -20%)
    PaddingBottom: =10
    BorderColor: =ColorFade(imgImportStatus.Fill, -20%)
    Visible: =!IsBlank(imgImportStatus)
    OnSelect: =

  icoImportStatus As icon.Add:
    DisplayMode: =Edit
    Color: =RGBA(0, 0, 0, 0)
    ZIndex: =20
    Icon: =Icon.Add
    HoverBorderColor: =ColorFade(icoImportStatus.BorderColor, 20%)
    PressedBorderColor: =ColorFade(icoImportStatus.BorderColor, -20%)
    BorderColor: =ColorFade(icoImportStatus.Fill, -20%)
    HoverFill: =ColorFade(icoImportStatus.Fill, 20%)
    Height: =48
    PressedFill: =ColorFade(icoImportStatus.Fill, -20%)
    Width: =50
    Y: =93
    X: =7
    DisabledFill: =ColorFade(icoImportStatus.Fill, -80%)
    HoverColor: =ColorFade(icoImportStatus.Color, 20%)
    PressedColor: =ColorFade(icoImportStatus.Color, -20%)
    Visible: =!IsBlank(imgImportStatus)
    OnSelect: |
      =If(
          !IsBlank(locImportSolutionStatus),
          Launch(locImportSolutionStatus._links.web.href)
      );

  icoImportSolution As icon.Add:
    PaddingTop: =8
    Height: =47
    Width: =65
    ZIndex: =12
    Y: =94
    Color: =PrimaryColor2Value
    BorderColor: =ColorFade(icoImportSolution.Fill, -20%)
    HoverFill: =ColorFade(icoImportSolution.Fill, 20%)
    PaddingLeft: =8
    PaddingBottom: =8
    PaddingRight: =5
    PressedColor: =ColorFade(icoImportSolution.Color, -20%)
    PressedFill: =ColorFade(icoImportSolution.Fill, -20%)
    DisabledFill: =ColorFade(icoImportSolution.Fill, -80%)
    Icon: =Icon.Add
    HoverBorderColor: =ColorFade(icoImportSolution.BorderColor, 20%)
    PressedBorderColor: =ColorFade(icoImportSolution.BorderColor, -20%)
    HoverColor: =ColorFade(icoImportSolution.Color, 20%)
    OnSelect: |-
      =UpdateContext({showDialogOverlay:true, showImportDialog:true})

  Label4 As label:
    Text: ="New Project"
    Color: =RGBA(0, 0, 0, 1)
    FontWeight: =Normal
    X: =600
    Y: =100
    Width: =152
    Height: =50
    ZIndex: =5
    Size: =14
    Visible: =false
    OnSelect: |-
      =UpdateContext({showProjectCreation:true})

  Icon1 As icon.Add:
    Icon: =Icon.Add
    Color: =PrimaryColor2Value
    PressedColor: =ColorFade(Icon1.Color, -20%)
    HoverColor: =ColorFade(Icon1.Color, 20%)
    DisabledFill: =ColorFade(Icon1.Fill, -80%)
    PressedFill: =ColorFade(Icon1.Fill, -20%)
    HoverFill: =ColorFade(Icon1.Fill, 20%)
    X: =565
    Y: =103
    Width: =44
    Height: =47
    BorderColor: =ColorFade(Icon1.Fill, -20%)
    PressedBorderColor: =ColorFade(Icon1.BorderColor, -20%)
    HoverBorderColor: =ColorFade(Icon1.BorderColor, 20%)
    ZIndex: =6
    PaddingTop: =8
    PaddingBottom: =8
    PaddingLeft: =8
    PaddingRight: =5
    Visible: =false
    OnSelect: |-
      =UpdateContext({showProjectCreation:true})

  lblSolution As label:
    Text: ="SOLUTION"
    ZIndex: =7
    FontWeight: =Semibold
    Height: =36
    Width: =198
    Size: =10
    Y: =146
    X: =28
    Font: =Font.'Segoe UI'

  lblTestProdStatus As label:
    Text: ="LATEST TEST STATUS"
    ZIndex: =8
    Visible: =false
    FontWeight: =Semibold
    Width: =142
    Y: =146
    X: =1320
    Align: =Center
    Size: =10
    Font: =Font.'Segoe UI'

  lblPushStatus As label:
    Text: ="LATEST PUSH STATUS"
    ZIndex: =9
    Height: =32
    FontWeight: =Semibold
    Y: =150
    X: =652
    Align: =Center
    Size: =10
    Font: =Font.'Segoe UI'

  lblPullRequestStatus As label:
    Text: ="LATEST PR->TEST->PROD STATUS"
    Align: =Center
    ZIndex: =10
    FontWeight: =Semibold
    Height: =36
    Width: =224
    Size: =10
    Y: =150
    X: =1030
    Font: =Font.'Segoe UI'

  glrSolutions As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver4.0':
    Items: =Search(SelectedEnvironmentSolutions, txtSearch.Text, "friendlyname")
    ZIndex: =4
    TemplatePadding: =0
    Layout: =Layout.Vertical
    X: =20
    TemplateSize: =80
    Fill: =RGBA(255,255, 255, 1)
    Y: =182
    Width: =App.Width - 40
    Height: =883
    OnSelect: =

    icoLaunchExportBuildUrl As icon.Add:
      X: =673
      Fill: =RGBA(0, 0, 0, 0)
      ZIndex: =9
      Color: =RGBA(0, 0, 0, 0)
      Icon: =Icon.Add
      HoverBorderColor: =ColorFade(icoLaunchExportBuildUrl.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoLaunchExportBuildUrl.BorderColor, -20%)
      BorderColor: =ColorFade(icoLaunchExportBuildUrl.Fill, -20%)
      HoverFill: =ColorFade(icoLaunchExportBuildUrl.Fill, 20%)
      Height: =80
      DisabledFill: =ColorFade(icoLaunchExportBuildUrl.Fill, -80%)
      PressedFill: =ColorFade(icoLaunchExportBuildUrl.Fill, -20%)
      HoverColor: =ColorFade(icoLaunchExportBuildUrl.Color, 20%)
      PressedColor: =ColorFade(icoLaunchExportBuildUrl.Color, -20%)
      OnSelect: |
        =Select(Parent);
        Launch(
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).exportToGitStatus._links.web.href
        );

    imgNext_6 As image:
      Image: |-
        ="data:image/svg+xml,"
        & EncodeUrl("<svg xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 0 24 24' width='24'><path d='M0 0h24v24H0z' fill='none'/>
        <path fill='" &  If(true , "#BBBBBB", LookUp(ThemeStyles, Name = "PrimaryColor2Value").Value) & "' d='M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z'/></svg>")
      DisabledBorderColor: =RGBA(0, 0, 0, 0)
      ZIndex: =4
      DisplayMode: =DisplayMode.Disabled
      Y: =6
      BorderColor: =ColorFade(imgNext_6.Fill, -20%)
      PressedFill: =ColorFade(imgNext_6.Fill, -20%)
      DisabledFill: =RGBA(0, 0, 0, 0)
      Height: =85
      Width: =82
      HoverBorderColor: =ColorFade(imgNext_6.BorderColor, 20%)
      PressedBorderColor: =ColorFade(imgNext_6.BorderColor, -20%)
      HoverFill: =ColorFade(imgNext_6.Fill, 20%)
      X: =glrSolutions.TemplateWidth - imgNext_6.Width -10
      Visible: =false
      OnSelect: |-
        =Navigate(NotYetUsedDetails, ScreenTransition.Fade, { SelectedProject: ThisItem })

    Title2 As label:
      Text: =ThisItem.friendlyname
      Color: =RGBA(0, 0, 0, 1)
      FontWeight: =Normal
      VerticalAlign: =VerticalAlign.Top
      X: =13
      Y: =17
      Width: =362
      Height: =37
      ZIndex: =1
      PaddingTop: =0
      PaddingRight: =0
      PaddingBottom: =0
      PaddingLeft: =0
      Size: =15
      Wrap: =false
      OnSelect: =

    btnCommitAndPush As button:
      Text: ="PUSH CHANGES TO GIT"
      BorderColor: =PrimaryColor2Value
      PressedBorderColor: =btnCommitAndPush.Fill
      HoverBorderColor: =ColorFade(btnCommitAndPush.BorderColor, 20%)
      Color: =PrimaryColor2Value
      PressedColor: =btnCommitAndPush.Fill
      HoverColor: =ColorFade(btnCommitAndPush.Color, 20%)
      DisplayMode: |-
        =//If(CurrentProjects.'Project Status' <> 'Project Status'.Approved || CurrentProjects.ErrorType = ErrorType.'Deployment Running'  , DisplayMode.Disabled, DisplayMode.Edit)
        DisplayMode.Edit
      Fill: =White
      PressedFill: =btnCommitAndPush.Color
      HoverFill: =ColorFade(btnCommitAndPush.Fill, 20%)
      FontWeight: =Normal
      X: =431
      Y: =17
      Width: =200
      ZIndex: =7
      BorderThickness: =1
      Size: =11
      Height: =45
      OnSelect: |-
        =UpdateContext(
            {
                showDialogOverlay: true,
                showCommitDialog: true
            }
        );
        If(
            IsBlank(
                LookUp(
                    LastSavedBranchesCreated,
                    solutionUniqueName = glrSolutions.Selected.uniquename
                )
            ),
            UpdateContext(
                {
                    locDefaultBranchForCommit: LookUp(
                        SelectedRepoBranches,
                        glrSolutions.Selected.uniquename in DisplayName,
                        DisplayName
                    )
                }
            ),
            UpdateContext(
                {
                    locDefaultBranchForCommit: LookUp(
                        LastSavedBranchesCreated,
                        solutionUniqueName = glrSolutions.Selected.uniquename,
                        branchName
                    )
                }
            )
        )

    imgCommitStatus As image:
      Image: |-
        =Switch(
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).exportToGitStatus.status,
            "completed",
            LookUp(
                StageStatesIcons,
                state = LookUp(
                    SolutionsLatestBuildStatuses,
                    uniquename = ThisItem.uniquename
                ).exportToGitStatus.result
            ).image,
            "inProgress",
            LookUp(
                StageStatesIcons,
                state = LookUp(
                    SolutionsLatestBuildStatuses,
                    uniquename = ThisItem.uniquename
                ).exportToGitStatus.status
            ).image,
            "notStarted",
            LookUp(
                StageStatesIcons,
                state = LookUp(
                    SolutionsLatestBuildStatuses,
                    uniquename = ThisItem.uniquename
                ).exportToGitStatus.status
            ).image,
            LookUp(
                StageStatesIcons,
                state = "empty"
            ).image
        )
      PaddingTop: =10
      ZIndex: =8
      DisplayMode: =DisplayMode.View
      Y: =17
      PaddingBottom: =10
      BorderColor: =ColorFade(imgCommitStatus.Fill, -20%)
      PressedFill: =ColorFade(imgCommitStatus.Fill, -20%)
      Height: =46
      Width: =149
      X: =631
      HoverBorderColor: =ColorFade(imgCommitStatus.BorderColor, 20%)
      PressedBorderColor: =ColorFade(imgCommitStatus.BorderColor, -20%)
      HoverFill: =ColorFade(imgCommitStatus.Fill, 20%)
      OnSelect: =Select(Parent);

    btnCreatePullRequest As button:
      Text: ="CREATE PULL REQUEST"
      BorderColor: =PrimaryColor2Value
      PressedBorderColor: =btnCreatePullRequest.Fill
      HoverBorderColor: =ColorFade(btnCreatePullRequest.BorderColor, 20%)
      Color: =PrimaryColor2Value
      PressedColor: =btnCreatePullRequest.Fill
      HoverColor: =ColorFade(btnCreatePullRequest.Color, 20%)
      DisplayMode: |-
        =//If(CurrentProjects.'Project Status' <> 'Project Status'.Approved || CurrentProjects.ErrorType = ErrorType.'Deployment Running'  , DisplayMode.Disabled, DisplayMode.Edit)
        DisplayMode.Edit
      Fill: =White
      PressedFill: =btnCreatePullRequest.Color
      HoverFill: =ColorFade(btnCreatePullRequest.Fill, 20%)
      FontWeight: =Normal
      X: =780
      Y: =17
      Width: =200
      ZIndex: =3
      BorderThickness: =1
      Size: =11
      Height: =45
      OnSelect: |
        =UpdateContext(
            {
                showDialogOverlay: true,
                showPullRequestDialog: true
            }
        );
        If(
            IsBlank(
                LookUp(
                    LastSavedBranchesCreated,
                    solutionUniqueName = glrSolutions.Selected.uniquename
                )
            ),
            UpdateContext(
                {
                    locDefaultBranchForCommit: LookUp(
                        SelectedRepoBranches,
                        glrSolutions.Selected.uniquename in DisplayName,
                        DisplayName
                    )
                }
            ),
            UpdateContext(
                {
                    locDefaultBranchForCommit: LookUp(
                        LastSavedBranchesCreated,
                        solutionUniqueName = glrSolutions.Selected.uniquename,
                        branchName
                    )
                }
            )
        );
        UpdateContext(
            {
                locTargetBranchForPullRequest: LookUp(
                    SelectedRepoBranches,
                    glrSolutions.Selected.uniquename in DisplayName,
                    DisplayName
                )
            }
        );

    imgPullRequestStatus As image:
      Image: |-
        =Switch(
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).pullRequestStatus.status,
            "active",
            LookUp(
                StageStatesIcons,
                state = "notStarted"
            ).image,
            "completed",
            LookUp(
                StageStatesIcons,
                state = "succeeded"
            ).image,
            "abandoned",
            LookUp(
                StageStatesIcons,
                state = "failed"
            ).image,
            LookUp(
                StageStatesIcons,
                state = "empty"
            ).image
        )
      Y: =21
      X: =1039
      PressedBorderColor: =ColorFade(imgPullRequestStatus.BorderColor, -20%)
      HoverBorderColor: =ColorFade(imgPullRequestStatus.BorderColor, 20%)
      Width: =50
      Height: =45
      PaddingTop: =10
      HoverFill: =ColorFade(imgPullRequestStatus.Fill, 20%)
      DisplayMode: =DisplayMode.View
      ZIndex: =12
      PressedFill: =ColorFade(imgPullRequestStatus.Fill, -20%)
      PaddingBottom: =10
      BorderColor: =ColorFade(imgPullRequestStatus.Fill, -20%)
      OnSelect: =Select(Parent);

    icoLaunchPullRequestUrl As icon.Add:
      Icon: =Icon.Add
      Color: =RGBA(0, 0, 0, 0)
      BorderColor: =ColorFade(icoLaunchPullRequestUrl.Fill, -20%)
      PressedColor: =ColorFade(icoLaunchPullRequestUrl.Color, -20%)
      Fill: =RGBA(0, 0, 0, 0)
      HoverFill: =ColorFade(icoLaunchPullRequestUrl.Fill, 20%)
      DisabledFill: =ColorFade(icoLaunchPullRequestUrl.Fill, -80%)
      X: =1052
      Height: =45
      Width: =23
      Y: =21
      PressedFill: =ColorFade(icoLaunchPullRequestUrl.Fill, -20%)
      ZIndex: =13
      HoverBorderColor: =ColorFade(icoLaunchPullRequestUrl.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoLaunchPullRequestUrl.BorderColor, -20%)
      HoverColor: =ColorFade(icoLaunchPullRequestUrl.Color, 20%)
      OnSelect: |
        =Select(Parent);
        Launch(
            "https://dev.azure.com/" & drpAdoOrganizations.Selected.AccountName & 
            "/" & drpAdoProjects.Selected.name & 
            "/_git/" & drpRepos.Selected.name & 
            "/pullrequest/" & 
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).pullRequestStatus.pullRequestId
        );

    imgPullRequestTargetBranchTriggeredBuild As image:
      Image: |-
        =If(
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).pullRequestStatus.status <> "completed",
            LookUp(
                StageStatesIcons,
                state = "empty"
            ).image,
            Switch(
                LookUp(
                    SolutionsLatestBuildStatuses,
                    uniquename = ThisItem.uniquename
                ).solutionTargetBranchStatus.status,
                "completed",
                LookUp(
                    StageStatesIcons,
                    state = LookUp(
                        SolutionsLatestBuildStatuses,
                        uniquename = ThisItem.uniquename
                    ).solutionTargetBranchStatus.result
                ).image,
                "inProgress",
                LookUp(
                    StageStatesIcons,
                    state = LookUp(
                        SolutionsLatestBuildStatuses,
                        uniquename = ThisItem.uniquename
                    ).solutionTargetBranchStatus.status
                ).image,
                "notStarted",
                LookUp(
                    StageStatesIcons,
                    state = LookUp(
                        SolutionsLatestBuildStatuses,
                        uniquename = ThisItem.uniquename
                    ).solutionTargetBranchStatus.status
                ).image,
                LookUp(
                    StageStatesIcons,
                    state = "empty"
                ).image
            )
        )
      PaddingTop: =10
      Height: =45
      PaddingBottom: =10
      Width: =58
      Y: =21
      BorderColor: =ColorFade(imgPullRequestTargetBranchTriggeredBuild.Fill, -20%)
      PressedFill: =ColorFade(imgPullRequestTargetBranchTriggeredBuild.Fill, -20%)
      X: =1094
      PressedBorderColor: =ColorFade(imgPullRequestTargetBranchTriggeredBuild.BorderColor, -20%)
      ZIndex: =14
      HoverBorderColor: =ColorFade(imgPullRequestTargetBranchTriggeredBuild.BorderColor, 20%)
      DisplayMode: =DisplayMode.View
      HoverFill: =ColorFade(imgPullRequestTargetBranchTriggeredBuild.Fill, 20%)
      OnSelect: =Select(Parent);

    imgProdBuild As image:
      Image: |-
        =If(
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).pullRequestStatus.status <> "completed",
            LookUp(
                StageStatesIcons,
                state = "empty"
            ).image,
            If(
                LookUp(
                    SolutionsLatestBuildStatuses,
                    uniquename = ThisItem.uniquename
                ).solutionTargetBranchStatus.status <> "completed",
                LookUp(
                    StageStatesIcons,
                    state = "empty"
                ).image,
                Switch(
                    LookUp(
                        SolutionsLatestBuildStatuses,
                        uniquename = ThisItem.uniquename
                    ).solutionReleaseBranchStatus.status,
                    "completed",
                    LookUp(
                        StageStatesIcons,
                        state = LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).solutionReleaseBranchStatus.result
                    ).image,
                    "inProgress",
                    LookUp(
                        StageStatesIcons,
                        state = LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).solutionReleaseBranchStatus.status
                    ).image,
                    "notStarted",
                    LookUp(
                        StageStatesIcons,
                        state = LookUp(
                            SolutionsLatestBuildStatuses,
                            uniquename = ThisItem.uniquename
                        ).solutionReleaseBranchStatus.status
                    ).image,
                    LookUp(
                        StageStatesIcons,
                        state = "empty"
                    ).image
                )
            )
        )
      Y: =21
      DisplayMode: =DisplayMode.View
      X: =1148
      HoverBorderColor: =ColorFade(imgProdBuild.BorderColor, 20%)
      PressedBorderColor: =ColorFade(imgProdBuild.BorderColor, -20%)
      HoverFill: =ColorFade(imgProdBuild.Fill, 20%)
      PressedFill: =ColorFade(imgProdBuild.Fill, -20%)
      ZIndex: =17
      PaddingTop: =10
      PaddingBottom: =10
      Width: =58
      Height: =45
      BorderColor: =ColorFade(imgProdBuild.Fill, -20%)
      OnSelect: =Select(Parent);

    icoProdBuild As icon.Add:
      X: =1160
      Fill: =RGBA(0, 0, 0, 0)
      ZIndex: =18
      Color: =RGBA(0, 0, 0, 0)
      Icon: =Icon.Add
      PressedBorderColor: =ColorFade(icoProdBuild.BorderColor, -20%)
      HoverBorderColor: =ColorFade(icoProdBuild.BorderColor, 20%)
      DisabledFill: =ColorFade(icoProdBuild.Fill, -80%)
      PressedColor: =ColorFade(icoProdBuild.Color, -20%)
      Y: =21
      Width: =31
      Height: =45
      PressedFill: =ColorFade(icoProdBuild.Fill, -20%)
      HoverFill: =ColorFade(icoProdBuild.Fill, 20%)
      BorderColor: =ColorFade(icoProdBuild.Fill, -20%)
      HoverColor: =ColorFade(icoProdBuild.Color, 20%)
      OnSelect: |
        =Select(Parent);
        Launch(
            "https://dev.azure.com/" & drpAdoOrganizations.Selected.AccountName & 
            "/" & drpAdoProjects.Selected.name & 
            "/_build/results?buildId=" & 
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).solutionReleaseBranchStatus.id
        );

    Image2 As image:
      Image: =ic_fluent_error_circle_24_regular
      X: =1472
      Y: =33
      Width: =30
      Height: =30
      PressedFill: =ColorFade(Image2.Fill, -20%)
      HoverFill: =ColorFade(Image2.Fill, 20%)
      BorderColor: =ColorFade(Image2.Fill, -20%)
      PressedBorderColor: =ColorFade(Image2.BorderColor, -20%)
      HoverBorderColor: =ColorFade(Image2.BorderColor, 20%)
      ZIndex: =6
      PaddingTop: =2
      PaddingRight: =2
      PaddingBottom: =2
      PaddingLeft: =2
      Visible: |-
        =//CurrentProjects.'Project Status' = 'Project Status'.Failed || CurrentProjects.ErrorType = ErrorType.'Deployment Failed'
        false
      OnSelect: =Select(Parent)

    icoPullRequestTargetBranchTriggeredBuild As icon.Add:
      X: =1094
      Fill: =RGBA(0, 0, 0, 0)
      ZIndex: =16
      Color: =RGBA(0, 0, 0, 0)
      Icon: =Icon.Add
      PressedBorderColor: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.BorderColor, -20%)
      HoverBorderColor: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.BorderColor, 20%)
      DisabledFill: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.Fill, -80%)
      PressedColor: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.Color, -20%)
      Y: =34
      Width: =58
      Height: =21
      HoverFill: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.Fill, 20%)
      BorderColor: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.Fill, -20%)
      PressedFill: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.Fill, -20%)
      HoverColor: =ColorFade(icoPullRequestTargetBranchTriggeredBuild.Color, 20%)
      OnSelect: |
        =Select(Parent);
        Launch(
            "https://dev.azure.com/" & drpAdoOrganizations.Selected.AccountName & 
            "/" & drpAdoProjects.Selected.name & 
            "/_build/results?buildId=" & 
            LookUp(
                SolutionsLatestBuildStatuses,
                uniquename = ThisItem.uniquename
            ).solutionTargetBranchStatus.id
        );

    lblOpenSolution As label:
      Text: ="Open Solution"
      Color: =RGBA(0, 134, 208, 1)
      X: =13
      Y: =42
      Width: =117
      Height: =29
      ZIndex: =5
      LineHeight: =1.6
      Size: =12
      Underline: =true
      PaddingLeft: =0
      OnSelect: =

    icoOpenSolution As icon.Add:
      X: =13
      ZIndex: =15
      Color: =RGBA(0, 0, 0, 0)
      Icon: =Icon.Add
      HoverBorderColor: =ColorFade(icoOpenSolution.BorderColor, 20%)
      PressedBorderColor: =ColorFade(icoOpenSolution.BorderColor, -20%)
      BorderColor: =ColorFade(icoOpenSolution.Fill, -20%)
      HoverFill: =ColorFade(icoOpenSolution.Fill, 20%)
      Height: =38
      Width: =106
      Y: =42
      DisabledFill: =ColorFade(icoOpenSolution.Fill, -80%)
      PressedFill: =ColorFade(icoOpenSolution.Fill, -20%)
      HoverColor: =ColorFade(icoOpenSolution.Color, 20%)
      PressedColor: =ColorFade(icoOpenSolution.Color, -20%)
      OnSelect: |-
        =Select(Parent);Launch("https://make.powerapps.com/environments/" & glrlEnvironments.Selected.name & "/solutions/" & ThisItem.solutionid, "", "_blank")

    rctStatusSeparator1 As rectangle:
      X: =1075
      Fill: =LightGray
      Y: =42
      Width: =50
      Height: =4
      DisabledFill: =rctStatusSeparator1.Fill
      HoverFill: =ColorFade(rctStatusSeparator1.Fill, 20%)
      BorderColor: =ColorFade(rctStatusSeparator1.Fill, -20%)
      ZIndex: =10
      PressedFill: =ColorFade(rctStatusSeparator1.Fill, -20%)
      OnSelect: =Select(Parent)

    rctStatusSeparator2 As rectangle:
      X: =1127
      ZIndex: =11
      Height: =4
      Width: =50
      Fill: =LightGray
      PressedFill: =ColorFade(rctStatusSeparator2.Fill, -20%)
      BorderColor: =ColorFade(rctStatusSeparator2.Fill, -20%)
      HoverFill: =ColorFade(rctStatusSeparator2.Fill, 20%)
      Y: =42
      DisabledFill: =rctStatusSeparator2.Fill
      OnSelect: =Select(Parent)

    Separator2 As rectangle:
      Fill: |-
        =ColorValue("#f4f3f2")
      DisabledFill: =Separator2.Fill
      PressedFill: =ColorFade(Separator2.Fill, -20%)
      HoverFill: =ColorFade(Separator2.Fill, 20%)
      BorderColor: =ColorFade(Separator2.Fill, -20%)
      Width: =Parent.TemplateWidth
      Y: =Parent.TemplateHeight - 1
      Height: =1
      ZIndex: =2
      OnSelect: =Select(Parent)

    grpDevTestProdStatus As group:
      ZIndex: =20
      Height: =5
      Width: =5
      Y: =40
      X: =40

  btnFunctions As groupContainer:
    ZIndex: =28
    DisplayMode: =DisplayMode.Edit
    Height: =320
    Width: =564
    Y: =760
    X: =1
    Fill: =RGBA(0, 0, 0, 0)
    BorderStyle: =BorderStyle.Solid
    BorderColor: =RGBA(0, 0, 0, 1)
    Visible: =false

    fncLoadSolutions As button:
      Text: ="fncLoadSolutions"
      HoverFill: =ColorFade(fncLoadSolutions.Fill, 20%)
      HoverBorderColor: =ColorFade(fncLoadSolutions.BorderColor, 20%)
      HoverColor: =ColorFade(fncLoadSolutions.Color, 20%)
      PressedFill: =fncLoadSolutions.Color
      PressedBorderColor: =fncLoadSolutions.Fill
      PressedColor: =fncLoadSolutions.Fill
      X: =1
      Width: =562
      Height: =50
      ZIndex: =3
      OnSelect: |-
        =UpdateContext({showLoader: true});
        
        ClearCollect(
            SelectedEnvironmentSolutions,
            GetEnvironmentSolutions.Run(
                SelectedEnvironment.properties.linkedEnvironmentMetadata.uniqueName,
                Substitute(
                    SelectedEnvironment.properties.linkedEnvironmentMetadata.hostNameSuffix,
                    ".dynamics.com",
                    ""
                )
            )
        );
        Select(fncResetCheckBuildStatuses);
        UpdateContext({showLoader: false});

    fncCollectSelectedProjectRepos As button:
      Text: ="fncCollectSelectedProjectRepos"
      ZIndex: =2
      Height: =50
      Width: =564
      Y: =51
      HoverFill: =ColorFade(fncCollectSelectedProjectRepos.Fill, 20%)
      PressedColor: =fncCollectSelectedProjectRepos.Fill
      PressedBorderColor: =fncCollectSelectedProjectRepos.Fill
      PressedFill: =fncCollectSelectedProjectRepos.Color
      HoverColor: =ColorFade(fncCollectSelectedProjectRepos.Color, 20%)
      HoverBorderColor: =ColorFade(fncCollectSelectedProjectRepos.BorderColor, 20%)
      OnSelect: |-
        =ClearCollect(
            SelectedProjectRepos,
            CustomAzureDevOps.GetGitRepos(
                drpAdoOrganizations.Selected.AccountName,
                drpAdoProjects.Selected.name
            ).value
        );

    fncCollectSelectedRepoBranches As button:
      Text: ="fncCollectSelectedRepoBranches"
      ZIndex: =1
      Height: =50
      Width: =564
      Y: =101
      PressedBorderColor: =fncCollectSelectedRepoBranches.Fill
      HoverFill: =ColorFade(fncCollectSelectedRepoBranches.Fill, 20%)
      PressedColor: =fncCollectSelectedRepoBranches.Fill
      PressedFill: =fncCollectSelectedRepoBranches.Color
      HoverColor: =ColorFade(fncCollectSelectedRepoBranches.Color, 20%)
      HoverBorderColor: =ColorFade(fncCollectSelectedRepoBranches.BorderColor, 20%)
      OnSelect: |
        =ClearCollect(
            SelectedRepoBranches,
            AddColumns(
                CustomAzureDevOps.GetBranches(
                    drpAdoOrganizations.Selected.AccountName,
                    drpAdoProjects.Selected.name,
                    drpRepos.Selected.id
                ).value,
                "DisplayName",
                Substitute(
                    name,
                    "refs/heads/",
                    ""
                )
            )
        );
        ForAll(
            LastSavedBranchesCreated,
            If(
                IsBlank(
                    LookUp(
                        LastSavedBranchesCreated,
                        ThisRecord.branchName in SelectedRepoBranches.DisplayName,
                        branchName
                    )
                ),
                Collect(
                    BranchesToRemove,
                    ThisRecord
                )
            )
        );
        ForAll(
            BranchesToRemove,
            Remove(
                LastSavedBranchesCreated,
                ThisRecord
            );
            
        );

    fncResetCheckBuildStatuses As button:
      Text: ="fncResetCheckBuildStatuses"
      HoverFill: =ColorFade(fncResetCheckBuildStatuses.Fill, 20%)
      HoverBorderColor: =ColorFade(fncResetCheckBuildStatuses.BorderColor, 20%)
      HoverColor: =ColorFade(fncResetCheckBuildStatuses.Color, 20%)
      PressedFill: =fncResetCheckBuildStatuses.Color
      PressedBorderColor: =fncResetCheckBuildStatuses.Fill
      PressedColor: =fncResetCheckBuildStatuses.Fill
      X: =1
      Y: =151
      Width: =562
      ZIndex: =4
      OnSelect: |
        =UpdateContext({locStartCheckBuildStatusTimer: false});
        Reset(tmrCheckBuildAndPullRequestStatuses);
        UpdateContext({locStartCheckBuildStatusTimer: true});

    fncInitializeHome As button:
      Text: ="fncInitializeHome"
      ZIndex: =5
      Width: =560
      Y: =191
      X: =2
      HoverFill: =ColorFade(fncInitializeHome.Fill, 20%)
      PressedColor: =fncInitializeHome.Fill
      PressedBorderColor: =fncInitializeHome.Fill
      PressedFill: =fncInitializeHome.Color
      HoverColor: =ColorFade(fncInitializeHome.Color, 20%)
      HoverBorderColor: =ColorFade(fncInitializeHome.BorderColor, 20%)
      OnSelect: |
        =UpdateContext({showLoader: true});
        UpdateContext({locStartCheckBuildStatusTimer: false});
        UpdateContext({locIsSaveSettingsEnabled: false});
        Set(
            gblCdsUser,
            First(
                Filter(
                    Users,
                    domainname = gblUser.Email
                )
            )
        );
        Set(
            ApplicationName,
            "PowerPlatformDevOpsALM"
        );
        // Get user settings for this App.   
        Set(
            AppUserSetting,
            First(
                Filter(
                    'App User Settings',
                    AppName = ApplicationName,
                    Owner = gblCdsUser
                )
            )
        );
        // If App User Setting record doesn't exist, it is the first time the user has used this app, so create it and force user to save initial values
        If(
            IsBlank(AppUserSetting),
            Set(
                AppUserSetting,
                Patch(
                    'App User Settings',
                    {cat_appname: ApplicationName}
                )
            );
            UpdateContext(
                {
                    showDialogOverlay: true,
                    showSettingsDialog: true
                }
            );
            
        );
        Set(
            LastSavedBranchesCreatedSettingName,
            "LastSavedBranchesCreated"
        );
        Set(
            LastSavedPullRequestsSettingName,
            "LastSavedPullRequests"
        );
        Set(
            LastSavedExportToGitPipelineRunsSettingName,
            "LastSavedExportToGitPipelineRuns"
        );
        // Parse the CSV and get it into the LastSavedPullRequests / LastSavedExportToGitPipelineRuns  / LastSavedBranchesCreated collections 
        Collect(
            TempLastSavedBranchesCreated,
            Split(
                LookUp(
                    AppUserSetting.'User Settings',
                    Name = LastSavedBranchesCreatedSettingName
                ).Value,
                "|"
            )
        );
        Clear(LastSavedBranchesCreated);
        ForAll(
            TempLastSavedBranchesCreated,
            Collect(
                LastSavedBranchesCreated,
                {
                    solutionUniqueName: First(
                        Split(
                            ThisRecord.Result,
                            ","
                        )
                    ).Result,
                    branchName: Last(
                        FirstN(
                            Split(
                                ThisRecord.Result,
                                ","
                            ),
                            2
                        )
                    ).Result
                }
            );
            
        );
        Clear(TempLastSavedBranchesCreated);
        Collect(
            TempLastSavedExportToGitPipelineRuns,
            Split(
                LookUp(
                    AppUserSetting.'User Settings',
                    Name = LastSavedExportToGitPipelineRunsSettingName
                ).Value,
                "|"
            )
        );
        Clear(LastSavedExportToGitPipelineRuns);
        ForAll(
            TempLastSavedExportToGitPipelineRuns,
            Collect(
                LastSavedExportToGitPipelineRuns,
                {
                    solutionUniqueName: First(
                        Split(
                            ThisRecord.Result,
                            ","
                        )
                    ).Result,
                    buildId: Value(
                        Last(
                            FirstN(
                                Split(
                                    ThisRecord.Result,
                                    ","
                                ),
                                2
                            )
                        ).Result
                    )
                }
            )
        );
        Clear(TempLastSavedExportToGitPipelineRuns);
        Collect(
            TempLastSavedPullRequests,
            Split(
                LookUp(
                    AppUserSetting.'User Settings',
                    Name = LastSavedPullRequestsSettingName
                ).Value,
                "|"
            )
        );
        Clear(LastSavedPullRequests);
        ForAll(
            TempLastSavedPullRequests,
            Collect(
                LastSavedPullRequests,
                {
                    solutionUniqueName: First(
                        Split(
                            ThisRecord.Result,
                            ","
                        )
                    ).Result,
                    pullRequestId: Value(
                        Last(
                            FirstN(
                                Split(
                                    ThisRecord.Result,
                                    ","
                                ),
                                2
                            )
                        ).Result
                    ),
                    targetBranchName: Last(
                        FirstN(
                            Split(
                                ThisRecord.Result,
                                ","
                            ),
                            3
                        )
                    ).Result
                }
            )
        );
        Clear(TempLastSavedPullRequests);
        Set(
            Orgs,
            CustomAzureDevOps.GetOrganizations()
        );
        Set(
            DefaultOrgSettingName,
            "LastSavedOrg"
        );
        Set(
            DefaultOrg,
            LookUp(
                AppUserSetting.'User Settings',
                Name = DefaultOrgSettingName
            )
        );
        Set(
            DefaultOrgValue,// Required to force explicit column selection, otherwise the Value field won't be returned in the result
            LookUp(
                AppUserSetting.'User Settings',
                Name = DefaultOrgSettingName
            ).Value
        );
        If(
            IsBlank(DefaultOrg),
            Set(
                DefaultOrg,
                Patch(
                    'User Settings',
                    {
                        'App User Setting': AppUserSetting,
                        Name: DefaultOrgSettingName,
                        Value: First(Orgs).AccountName
                    }
                )
            )
        );
        ClearCollect(
            SelectedOrgProjects,
            CustomAzureDevOps.GetProjects(DefaultOrg.Value).value
        );
        Set(
            DefaultProjectSettingName,
            "LastSavedProject"
        );
        Set(
            DefaultProject,
            LookUp(
                AppUserSetting.'User Settings',
                Name = DefaultProjectSettingName
            )
        );
        If(
            IsBlank(DefaultProject),
            Set(
                DefaultProject,
                Patch(
                    'User Settings',
                    {
                        'App User Setting': AppUserSetting,
                        Name: DefaultProjectSettingName,
                        Value: First(SelectedOrgProjects).name
                    }
                )
            )
        );
        ClearCollect(
            SelectedProjectRepos,
            CustomAzureDevOps.GetGitRepos(
                drpAdoOrganizations.Selected.AccountName,
                drpAdoProjects.Selected.name
            ).value
        );
        Set(
            DefaultRepoSettingName,
            "LastSavedRepo"
        );
        Set(
            DefaultRepo,
            LookUp(
                AppUserSetting.'User Settings',
                Name = DefaultRepoSettingName
            )
        );
        If(
            IsBlank(DefaultRepo),
            Set(
                DefaultRepo,
                Patch(
                    'User Settings',
                    {
                        'App User Setting': AppUserSetting,
                        Name: DefaultRepoSettingName,
                        Value: First(SelectedProjectRepos).name
                    }
                )
            )
        );
        ClearCollect(
            AdoServiceEndpoints,
            Filter(
                CustomAzureDevOps.GetServiceEndpoints(
                    DefaultOrg.Value,
                    DefaultProject.Value
                ).value,
                EndsWith(
                    name,
                    ".dynamics.com/"
                )
            )
        );
        ClearCollect(
            Environments,
            Filter(
                PowerAppsforMakers.GetEnvironments().value,
                properties.linkedEnvironmentMetadata.instanceUrl in AdoServiceEndpoints.name
            )
        );
        Set(
            DefaultEnvironmentSettingName,
            "LastSavedEnvironment"
        );
        Set(
            DefaultEnvironment,
            LookUp(
                AppUserSetting.'User Settings',
                Name = DefaultEnvironmentSettingName
            )
        );
        If(
            IsBlank(DefaultEnvironment),
            Set(
                DefaultEnvironment,
                Patch(
                    'User Settings',
                    {
                        'App User Setting': AppUserSetting,
                        Name: DefaultEnvironmentSettingName,
                        Value: First(Environments).name
                    }
                )
            )
        );
        Set(
            DefaultEnvironmentToLoad,
            LookUp(
                Environments,
                name = DefaultEnvironment.Value
            )
        );
        Set(
            SelectedEnvironment,
            DefaultEnvironmentToLoad
        );
        ClearCollect(
            SelectedProjectPipelines,
            AddColumns(
                Filter(
                    CustomAzureDevOps.GetPipelines(
                        DefaultOrg.Value,
                        DefaultProject.Value
                    ).value,
                    StartsWith(
                        name,
                        "build-deploy-"
                    )
                ),
                "DisplayName",
                Substitute(
                    name,
                    "build-deploy-",
                    ""
                )
            )
        );
        Select(fncCollectSelectedRepoBranches);
        Select(fncLoadSolutions);
        ClearCollect(
            StageStatesIcons,
            {
                state: "canceled",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-672-desc' class='bolt-status flex-noshrink failed' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-672-desc'>Failed &lt;1s</desc><circle fill='#cd4a45' cx='8' cy='8' r='8'></circle><path d='M10.984 5.004a.9.9 0 0 1 0 1.272L9.27 7.99l1.74 1.741a.9.9 0 1 1-1.272 1.273l-1.74-1.741-1.742 1.74a.9.9 0 1 1-1.272-1.272l1.74-1.74-1.713-1.714a.9.9 0 0 1 1.273-1.273l1.713 1.713 1.714-1.713a.9.9 0 0 1 1.273 0z' fill='#fff'></path></svg>")
            },
            {
                state: "failed",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-672-desc' class='bolt-status flex-noshrink failed' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-672-desc'>Failed &lt;1s</desc><circle fill='#cd4a45' cx='8' cy='8' r='8'></circle><path d='M10.984 5.004a.9.9 0 0 1 0 1.272L9.27 7.99l1.74 1.741a.9.9 0 1 1-1.272 1.273l-1.74-1.741-1.742 1.74a.9.9 0 1 1-1.272-1.272l1.74-1.74-1.713-1.714a.9.9 0 0 1 1.273-1.273l1.713 1.713 1.714-1.713a.9.9 0 0 1 1.273 0z' fill='#fff'></path></svg>")
            },
            {
                state: "succeeded",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-663-desc' class='bolt-status flex-noshrink success' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-663-desc'>Success 5m 1s</desc><circle fill='#55a362' cx='8' cy='8' r='8'></circle><path d='M6.062 11.144l-.003-.002-1.784-1.785A.937.937 0 1 1 5.6 8.031l1.125 1.124 3.88-3.88A.937.937 0 1 1 11.931 6.6l-4.54 4.54-.004.004a.938.938 0 0 1-1.325 0z' fill='#fff'></path></svg>")
            },
            {
                state: "notStarted",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-928-desc' class='bolt-status flex-noshrink active' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-928-desc'>Queued</desc><circle fill='#005a9e' cx='8' cy='8' r='8'></circle><path d='M8 3.5a.9.9 0 0 1 .9.9v3.325l2.002 2.001A.9.9 0 1 1 9.629 11L7.408 8.778A.898.898 0 0 1 7.1 8.1V4.4a.9.9 0 0 1 .9-.9z' fill='#fff'></path></svg>")
            },
            {
                state: "inProgress",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-356-desc' class='bolt-status flex-noshrink active animate' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-356-desc'>Running</desc><circle fill='#005a9e' cx='8' cy='8' r='8'></circle><path  d='M4.75 8a3.25 3.25 0 0 1 1.917-2.965c.33-.148.583-.453.583-.814 0-.479-.432-.848-.881-.683A4.752 4.752 0 0 0 3.29 8.62c.064.49.616.697 1.043.45.303-.175.443-.528.423-.877A3.304 3.304 0 0 1 4.75 8zm6.5 0c0 .065-.002.13-.006.194-.02.349.12.702.422.877.428.247.98.04 1.044-.45a4.752 4.752 0 0 0-3.078-5.084c-.45-.164-.882.205-.882.684 0 .36.253.666.583.814A3.25 3.25 0 0 1 11.25 8zM8 11.25c.758 0 1.455-.26 2.008-.694.293-.23.696-.31 1.019-.123.402.233.51.77.167 1.083A4.733 4.733 0 0 1 8 12.75c-1.23 0-2.35-.467-3.194-1.234-.344-.312-.235-.85.168-1.083.322-.186.725-.108 1.018.123.553.435 1.25.694 2.008.694z' fill='#fff'></path></svg>")
            },
            {
                state: "skipped",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-866-desc' class='bolt-status flex-noshrink neutral' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-866-desc'>Deploy to Test Skipped</desc><circle cx='8' cy='8' r='7' fill='#fff'></circle><path fill='#333333' fill-rule='evenodd' clip-rule='evenodd' d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-1.5 0a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0zM6.752 4.372a.861.861 0 0 1 1.218 0l3.005 3.005a.86.86 0 0 1 .252.62.859.859 0 0 1-.252.626L7.97 11.628a.861.861 0 1 1-1.218-1.218L9.162 8l-2.41-2.41a.861.861 0 0 1 0-1.218z'></path></svg>")
            },
            {
                state: "empty",
                image: "data:image/svg+xml," & EncodeUrl("<svg aria-labelledby='__bolt-status-957-desc' class='bolt-status flex-noshrink neutral' height='16' role='img' viewBox='0 0 16 16' width='16' xmlns='http://www.w3.org/2000/svg'><desc id='__bolt-status-957-desc'>Deploy to Build Validation Environment Waiting</desc><circle cx='8' cy='8' r='7' fill='#fff'></circle><path fill-rule='evenodd' clip-rule='evenodd' d='M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm0-1.5a6.5 6.5 0 1 0 0-13 6.5 6.5 0 0 0 0 13z'></path></svg>")
            }
        );
        Select(fncResetCheckBuildStatuses);
        Set(
            gblAzureDevOpsUserId,
            First(
                CustomAzureDevOps.GetIdentities(
                    drpAdoOrganizations.Selected.AccountName,
                    {
                        searchFilter: "MailAddress",
                        filterValue: gblUser.Email
                    }
                ).value
            ).id
        );
        UpdateContext({locIsSaveSettingsEnabled: true});

  grpImportSolution As group:
    X: =32
    Y: =-64
    Width: =5
    Height: =5
    ZIndex: =26

  imgBtnNewProject As group:
    ZIndex: =5
    Height: =5
    Width: =5
    Y: =40
    X: =40

  SearchBox As group:
    ZIndex: =12
    Height: =5
    Width: =5
    Y: =40
    X: =40

  grpTableHeader As group:
    X: =40
    Y: =40
    Width: =5
    Height: =5
    ZIndex: =21

  EnvironmentSettings As group:
    ZIndex: =31
    Height: =5
    Width: =5
    Y: =40
    X: =40

