# Multi-stage starter template for:
# -Deploying the solution to a Validation environment
# -Deploying the solution to a Test environment
# -Deploying the solution to a Production environment after approval
trigger: none
pr: none
resources:
  repositories:
  - repository: PipelineRepo  # repository name (DO NOT CHANGE THIS VALUE) 
    type: github
    ref: mochs-aa4am-77
    endpoint: coe-starter-kit
    name: Microsoft/coe-alm-accelerator-templates  #This is the name of the repo in the current project in Azure Devops that has the pipeline templates. If the repo is in a different project you can specify the project and repo using the format ProjectContainingTheBuildTemplates/RepositoryContainingTheBuildTemplates (https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#type)
  pipelines:
    - pipeline: buildPipeline
      source: build-ALMAcceleratorSampleSolution
      trigger: 
        branches:
          include:
          - ALMAcceleratorSampleSolution
# NOTE: If you want to use different values for these variables, you can remove the variable group and attach them directly to this pipeline. The group specified below is a variable group defined in the Library for the Pipelines
variables:
- group: global-variable-group
- name: SolutionName
  value: 'ALMAcceleratorSampleSolution' #Replace with the actual name of the solution you are building. (NOTE: Not the Display Name)
     
stages:
- stage: deploy
  displayName: Deploy to Build Validation Environment
  jobs:
  - deployment: 
    pool: 
      vmImage: 'windows-2019'
    variables: # The build contains an output variable named TriggerSolutionUpgrade that is used in the deployment steps to determine whether to perform a solution upgrade or update
      TriggerSolutionUpgrade: false
    environment: 'Validate'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: Pipelines\Templates\deploy-Solution.yml@PipelineRepo #The @PipelineRepo tells the pipeline where to look for the templates based on the name of the repo you specified above
            parameters:
              serviceConnection: '$(ServiceConnection)'
              environmentVariables: '$(EnvironmentVariables)'
              connectionReferences: '$(ConnectionReferences)'
              aadGroupTeamConfiguration: '$(AadGroupTeamConfiguration)'
              aadGroupCanvasConfiguration: '$(AadGroupCanvasConfiguration)'
              solutionComponentOwnershipConfiguration: '$(SolutionComponentOwnershipConfiguration)'